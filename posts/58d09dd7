<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover"><title>开发环境配置 | yww</title><meta name="author" content="yww"><meta name="copyright" content="yww"><meta name="format-detection" content="telephone=no"><meta name="theme-color" content="#ffffff"><meta name="description" content="一些服务器软件的安装">
<meta property="og:type" content="article">
<meta property="og:title" content="开发环境配置">
<meta property="og:url" content="https://yww52.com/posts/58d09dd7">
<meta property="og:site_name" content="yww">
<meta property="og:description" content="一些服务器软件的安装">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://img.yww52.com/2023/4/2023-4-11top_img.jpg">
<meta property="article:published_time" content="2023-04-10T16:00:00.000Z">
<meta property="article:modified_time" content="2025-07-18T09:57:30.192Z">
<meta property="article:author" content="yww">
<meta property="article:tag" content="yw,yww">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://img.yww52.com/2023/4/2023-4-11top_img.jpg"><link rel="shortcut icon" href="/img/favicon.png"><link rel="canonical" href="https://yww52.com/posts/58d09dd7"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="stylesheet" href="/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css"><script>
    (() => {
      
    const saveToLocal = {
      set: (key, value, ttl) => {
        if (!ttl) return
        const expiry = Date.now() + ttl * 86400000
        localStorage.setItem(key, JSON.stringify({ value, expiry }))
      },
      get: key => {
        const itemStr = localStorage.getItem(key)
        if (!itemStr) return undefined
        const { value, expiry } = JSON.parse(itemStr)
        if (Date.now() > expiry) {
          localStorage.removeItem(key)
          return undefined
        }
        return value
      }
    }

    window.btf = {
      saveToLocal,
      getScript: (url, attr = {}) => new Promise((resolve, reject) => {
        const script = document.createElement('script')
        script.src = url
        script.async = true
        Object.entries(attr).forEach(([key, val]) => script.setAttribute(key, val))
        script.onload = script.onreadystatechange = () => {
          if (!script.readyState || /loaded|complete/.test(script.readyState)) resolve()
        }
        script.onerror = reject
        document.head.appendChild(script)
      }),
      getCSS: (url, id) => new Promise((resolve, reject) => {
        const link = document.createElement('link')
        link.rel = 'stylesheet'
        link.href = url
        if (id) link.id = id
        link.onload = link.onreadystatechange = () => {
          if (!link.readyState || /loaded|complete/.test(link.readyState)) resolve()
        }
        link.onerror = reject
        document.head.appendChild(link)
      }),
      addGlobalFn: (key, fn, name = false, parent = window) => {
        if (!false && key.startsWith('pjax')) return
        const globalFn = parent.globalFn || {}
        globalFn[key] = globalFn[key] || {}
        globalFn[key][name || Object.keys(globalFn[key]).length] = fn
        parent.globalFn = globalFn
      }
    }
  
      
      const activateDarkMode = () => {
        document.documentElement.setAttribute('data-theme', 'dark')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#0d0d0d')
        }
      }
      const activateLightMode = () => {
        document.documentElement.setAttribute('data-theme', 'light')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#ffffff')
        }
      }

      btf.activateDarkMode = activateDarkMode
      btf.activateLightMode = activateLightMode

      const theme = saveToLocal.get('theme')
    
          theme === 'dark' ? activateDarkMode() : theme === 'light' ? activateLightMode() : null
        
      
      const asideStatus = saveToLocal.get('aside-status')
      if (asideStatus !== undefined) {
        document.documentElement.classList.toggle('hide-aside', asideStatus === 'hide')
      }
    
      
    const detectApple = () => {
      if (/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)) {
        document.documentElement.classList.add('apple')
      }
    }
    detectApple()
  
    })()
  </script><script>const GLOBAL_CONFIG = {
  root: '/',
  algolia: undefined,
  localSearch: undefined,
  translate: undefined,
  highlight: {"plugin":"highlight.js","highlightCopy":true,"highlightLang":true,"highlightHeightLimit":false,"highlightFullpage":false,"highlightMacStyle":false},
  copy: {
    success: '复制成功',
    error: '复制失败',
    noSupport: '浏览器不支持'
  },
  relativeDate: {
    homepage: false,
    post: false
  },
  runtime: '',
  dateSuffix: {
    just: '刚刚',
    min: '分钟前',
    hour: '小时前',
    day: '天前',
    month: '个月前'
  },
  copyright: undefined,
  lightbox: 'null',
  Snackbar: undefined,
  infinitegrid: {
    js: 'https://cdn.jsdelivr.net/npm/@egjs/infinitegrid/dist/infinitegrid.min.js',
    buttonText: '加载更多'
  },
  isPhotoFigcaption: false,
  islazyload: false,
  isAnchor: false,
  percent: {
    toc: true,
    rightside: false,
  },
  autoDarkmode: false
}</script><script id="config-diff">var GLOBAL_CONFIG_SITE = {
  title: '开发环境配置',
  isPost: true,
  isHome: false,
  isHighlightShrink: false,
  isToc: true,
  isShuoshuo: false
}</script><!-- hexo injector head_end start --><link rel="stylesheet" href="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css" media="defer" onload="this.media='all'"><link rel="stylesheet" href="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css" media="defer" onload="this.media='all'"><script src="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js"></script><!-- hexo injector head_end end --><meta name="generator" content="Hexo 7.3.0"></head><body><div class="post" id="body-wrap"><header class="post-bg" id="page-header" style="background-image: url(https://img.yww52.com/2023/4/2023-4-11top_img.jpg);"><nav id="nav"><span id="blog-info"><a class="nav-site-title" href="/"><span class="site-name">yww</span></a><a class="nav-page-title" href="/"><span class="site-name">开发环境配置</span></a></span><div id="menus"></div></nav><div id="post-info"><h1 class="post-title">开发环境配置</h1><div id="post-meta"><div class="meta-firstline"><span class="post-meta-date"><i class="far fa-calendar-alt fa-fw post-meta-icon"></i><span class="post-meta-label">发表于</span><time class="post-meta-date-created" datetime="2023-04-10T16:00:00.000Z" title="发表于 2023-04-11 00:00:00">2023-04-11</time><span class="post-meta-separator">|</span><i class="fas fa-history fa-fw post-meta-icon"></i><span class="post-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2025-07-18T09:57:30.192Z" title="更新于 2025-07-18 17:57:30">2025-07-18</time></span><span class="post-meta-categories"><span class="post-meta-separator">|</span><i class="fas fa-inbox fa-fw post-meta-icon"></i><a class="post-meta-categories" href="/categories/%E6%97%A0%E7%B1%BB%E5%8F%AF%E5%88%86/">无类可分</a></span></div><div class="meta-secondline"><span class="post-meta-separator">|</span><span class="post-meta-pv-cv" id="" data-flag-title=""><i class="far fa-eye fa-fw post-meta-icon"></i><span class="post-meta-label">浏览量:</span><span id="busuanzi_value_page_pv"><i class="fa-solid fa-spinner fa-spin"></i></span></span></div></div></div></header><main class="layout" id="content-inner"><div id="post"><article class="container post-content" id="article-container"><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>基于<code>centos7</code>的环境安装。</p>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="卸载系统自带的JDK"><a href="#卸载系统自带的JDK" class="headerlink" title="卸载系统自带的JDK"></a>卸载系统自带的JDK</h2><h3 id="查看系统安装的JDK"><a href="#查看系统安装的JDK" class="headerlink" title="查看系统安装的JDK"></a>查看系统安装的JDK</h3><p>使用<code>rpm -qa | grep jdk</code>命令查看当前系统安装的JDK。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# rpm -qa | grep jdk</span><br><span class="line">java-1.8.0-openjdk-headless-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">java-1.7.0-openjdk-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line">java-1.7.0-openjdk-headless-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line">copy-jdk-configs-3.3-11.el7_9.noarch</span><br><span class="line">java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.x86_64</span><br></pre></td></tr></table></figure>
<h3 id="卸载安装的JDK"><a href="#卸载安装的JDK" class="headerlink" title="卸载安装的JDK"></a>卸载安装的JDK</h3><p>使用<code>rpm -e --nodeps</code>的命令去卸载上述查询到的JDK。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">[root@192 ~]# rpm -e --nodeps java-1.7.0-openjdk-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line">[root@192 ~]# rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line">[root@192 ~]# rpm -e --nodeps copy-jdk-configs-3.3-11.el7_9.noarch</span><br><span class="line">[root@192 ~]# rpm -e --nodeps java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">[root@192 ~]# rpm -qa | grep jdk</span><br><span class="line">[root@192 ~]# java -version</span><br><span class="line">bash: java: 未找到命令...</span><br></pre></td></tr></table></figure>
<h2 id="使用yum方式安装Java"><a href="#使用yum方式安装Java" class="headerlink" title="使用yum方式安装Java"></a>使用yum方式安装Java</h2><h3 id="查看可以安装的版本"><a href="#查看可以安装的版本" class="headerlink" title="查看可以安装的版本"></a>查看可以安装的版本</h3><p>使用命令<code>yum -y list java*</code>查询可以安装的Java版本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# yum -y list java*</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">已安装的软件包</span><br><span class="line">javapackages-tools.noarch  3.4.1-11.el7  @anaconda可安装的软件包</span><br><span class="line">.......</span><br></pre></td></tr></table></figure>
<h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>这里选择安装1.8的版本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# yum -y install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure>
<h3 id="查看JDK安装的目录"><a href="#查看JDK安装的目录" class="headerlink" title="查看JDK安装的目录"></a>查看JDK安装的目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# <span class="built_in">cd</span> /usr/lib/jvm/java-1.8.0-openjdk</span><br><span class="line">[root@192 java-1.8.0-openjdk]# <span class="built_in">ls</span> </span><br><span class="line">ASSEMBLY_EXCEPTION  bin  demo  include  jre  lib  LICENSE  sample  src.zip  tapset  THIRD_PARTY_README</span><br></pre></td></tr></table></figure>
<h3 id="卸载yum下载的JDK"><a href="#卸载yum下载的JDK" class="headerlink" title="卸载yum下载的JDK"></a>卸载yum下载的JDK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# yum -y remove java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure>
<h2 id="手动安装JDK"><a href="#手动安装JDK" class="headerlink" title="手动安装JDK"></a>手动安装JDK</h2><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>安装包的下载可以去oracle的官网去下载，这里选择下载<code>Java8</code>的版本。</p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://www.oracle.com/java/technologies/downloads/#java8">下载地址</a></p>
<p>根据自己的系统，选择对应的版本即可，这里选择<code>x64 Compressed Archive</code>的安装包。</p>
<p>将<code>jdk-8u361-linux-x64.tar.gz</code>安装包上传到服务器。</p>
<h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><p>这里将Java放在了<code>/usr/local/java</code>的文件夹中，把安装包解压到该文件夹即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 java]# tar -zxvf jdk-8u361-linux-x64.tar.gz -C ./</span><br></pre></td></tr></table></figure>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>在<code>/etc/profile</code>文件尾部，加入以下的JDK的环境配置。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_361</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure>
<p>执行以下命令，使环境变量生效。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<p>这条命令，在重启之后会失效，需要再次执行，不想再次执行，需要在<code>/etc/bashrc</code>尾部加入该条命令。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="卸载JDK"><a href="#卸载JDK" class="headerlink" title="卸载JDK"></a>卸载JDK</h3><p>想卸载的话，就将上述的压缩包的文件和环境变量删掉即可。</p>
<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="Redis离线安装"><a href="#Redis离线安装" class="headerlink" title="Redis离线安装"></a>Redis离线安装</h2><ol>
<li><p>下载Redis</p>
<p>Redis的安装包直接去官网下载即可。</p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://download.redis.io/releases/?_gl=1*1oe52s2*_gcl_au*MTAyNjg4NTk2Ny4xNzQ0MTY3NDU0">下载地址</a></p>
</li>
<li><p>将安装包解压</p>
<p>这里放到<code>/usr/local/redis</code>下，并执行下面命令进行解压。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 redis]# tar -zxvf redis-7.0.10.tar.gz </span><br></pre></td></tr></table></figure>
</li>
<li><p>编译安装</p>
<p>进入redis源码文件夹，执行以下命令，编译redis并进行安装。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 官方建议使用test测试</span></span><br><span class="line">make <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看是否安装成功，在系统命令中出现redis的命令表示安装成功了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@192 redis-7.0.10]# <span class="built_in">cd</span> /usr/local/bin/</span><br><span class="line">[root@192 bin]# <span class="built_in">ls</span> </span><br><span class="line">redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server</span><br></pre></td></tr></table></figure>
</li>
<li><p>将Redis安装到系统服务</p>
<p>使用Redis的脚本工具，将Redis安装到系统服务上。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@192 redis-7.0.10]# cd utils/</span><br><span class="line">[root@192 utils]# ./install_server.sh</span><br><span class="line">Welcome to the redis service installer</span><br><span class="line">This script will help you easily set up a running redis server</span><br><span class="line"></span><br><span class="line">This systems seems to use systemd.</span><br><span class="line">Please take a look at the provided example service unit files in this directory, and adapt and install them. Sorry!</span><br></pre></td></tr></table></figure>
<p>发现有问题，得换种方法。</p>
<p>将<code>utils</code>目录下的<code>systemd-redis_server.service</code>文件拷贝到系统配置目录下，并改名为<code>redis.server</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@192 utils]# <span class="built_in">cp</span> systemd-redis_server.service /usr/lib/systemd/system</span><br><span class="line">[root@192 utils]# <span class="built_in">cd</span> /usr/lib/systemd/system</span><br><span class="line">[root@192 system]#  <span class="built_in">mv</span> systemd-redis_server.service  redis.service</span><br></pre></td></tr></table></figure>
<p>编辑<code>redis.server</code>.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来为ExecStart=/usr/local/bin/redis-server --supervised systemd --daemonize no</span></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /usr/local/redis/redis-7.0.10/redis.conf --supervised systemd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不修改启动可能会超时</span></span><br><span class="line"><span class="comment">#Type=notify</span></span><br><span class="line">PrivateTmp=<span class="built_in">yes</span></span><br><span class="line">TimeoutStartSec=15</span><br><span class="line">TimeoutStopSec=15</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑redis的配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################################# GENERAL #####################################</span></span><br><span class="line"><span class="comment"># 配置日志文件位置</span></span><br><span class="line">logfile /var/log/redis/redis.log</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING  ################################</span></span><br><span class="line"><span class="comment"># 数据目录</span></span><br><span class="line"><span class="built_in">dir</span> /var/redis/6379</span><br></pre></td></tr></table></figure>
</li>
<li><p>基础命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载服务文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 设置自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> redis</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start redis</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">systemctl stop redis</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart redis</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status redis</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Redis配置文件修改"><a href="#Redis配置文件修改" class="headerlink" title="Redis配置文件修改"></a>Redis配置文件修改</h2><p>redis有些配置需要更改，不然使用起来会出现问题。配置文件就在源码文件夹中的<code>redis.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 需设置为 0.0.0.0 以允许所有 IP 访问，默认只能本地127.0.0.1本地IP访问</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># 关闭protected-mode模式，此时外部网络可以直接访问</span><br><span class="line">protected-mode no</span><br><span class="line"># 设置密码，不设置就需要自己注意</span><br><span class="line">requirepass 123456</span><br><span class="line"># 是否以守护进程模式运行（后台运行），默认为no</span><br><span class="line">daemonize yes</span><br><span class="line"># 日志文件存放</span><br><span class="line">logfile &quot;/data/redis/log/redis.log&quot;</span><br><span class="line"># 持久化存放文件的路径</span><br><span class="line">dir /data/redis/data</span><br><span class="line"># 启用 AOF 持久化</span><br><span class="line">appendonly yes</span><br><span class="line"># 指定 AOF 文件名</span><br><span class="line">appendfilename &quot;redis_data.aof&quot;</span><br></pre></td></tr></table></figure>
<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="APT包管理安装"><a href="#APT包管理安装" class="headerlink" title="APT包管理安装"></a>APT包管理安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新</span></span><br><span class="line">apt update</span><br><span class="line"><span class="comment"># 下载nginx</span></span><br><span class="line">apt install nginx</span><br><span class="line"><span class="comment"># 验证nginx</span></span><br><span class="line">nginx -v</span><br><span class="line"><span class="comment"># nginx配置/etc/nginx </span></span><br></pre></td></tr></table></figure>
<h2 id="源码离线安装"><a href="#源码离线安装" class="headerlink" title="源码离线安装"></a>源码离线安装</h2><h3 id="Nginx依赖下载"><a href="#Nginx依赖下载" class="headerlink" title="Nginx依赖下载"></a>Nginx依赖下载</h3><p>Nginx还需要下载一些依赖库。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PCRE https://github.com/PCRE2Project/pcre2/releases，例如pcre2-10.45.tar.gz</span></span><br><span class="line"><span class="comment"># PCRE编译安装</span></span><br><span class="line">tar -zxvf pcre2-10.45.tar.gz</span><br><span class="line"><span class="built_in">cd</span>  pcre2-10.45</span><br><span class="line">./configure</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Zlib https://www.zlib.net/，例如zlib-1.3.1.tar.gz</span></span><br><span class="line"><span class="comment"># Zlib编译安装</span></span><br><span class="line">tar -zxvf zlib-1.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span>  zlib-1.3.1</span><br><span class="line">./configure</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># OpenSSL https://openssl-library.org/source/，例如openssl-3.5.1.tar.gz</span></span><br><span class="line"><span class="comment"># OpenSSL编译安装</span></span><br><span class="line">tar -zxvf openssl-3.5.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span>  openssl-3.5.1</span><br><span class="line">./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<blockquote>
<p>尽量添加sudo执行命令，避免权限出现的问题。</p>
</blockquote>
<h3 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title="编译安装Nginx"></a>编译安装Nginx</h3><p>首先需要先去下载<code>nginx</code>的源码</p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://nginx.org/en/download.html">下载地址</a></p>
<p>比如这里的nginx-1.28.0.tar.gz。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf nginx-1.28.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span>  nginx-1.28.0</span><br><span class="line"><span class="comment"># 配置编译参数，请自行替换刚刚的依赖源码路径</span></span><br><span class="line">./configure \</span><br><span class="line">  --prefix=/etc/nginx \</span><br><span class="line">  --with-pcre=/data/nginx/pcre2-10.45 \</span><br><span class="line">  --with-zlib=/data/nginx/zlib-1.3.1 \</span><br><span class="line">  --with-openssl=/data/openssl-3.5.1 \</span><br><span class="line">  --with-http_ssl_module</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h3 id="配置-Systemd-服务"><a href="#配置-Systemd-服务" class="headerlink" title="配置 Systemd 服务"></a>配置 Systemd 服务</h3><p>创建服务文件<code>/etc/systemd/system/nginx.service</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The NGINX HTTP and reverse proxy server</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/etc/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/etc/nginx/sbin/nginx -t</span><br><span class="line">ExecStart=/etc/nginx/sbin/nginx</span><br><span class="line">ExecReload=/etc/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="built_in">sudo</span> systemctl start nginx</span><br></pre></td></tr></table></figure>
<h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h3 id="官网DEB包安装"><a href="#官网DEB包安装" class="headerlink" title="官网DEB包安装"></a>官网DEB包安装</h3><p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p>
<p>选择官网适配有的操作系统，这里就选择<code>Ubantu Linux</code>，版本自己选择。</p>
<p>要是没有对应的版本，就看看使用的操作系统是基于什么的，也可以尝试一下，实在不行就只能试试使用源码进行编译了。</p>
<p>我这里下载的就是第一个<code>Ubuntu Linux 24.10 (x86, 64-bit), DEB Bundle</code>，包含了所有的数据库依赖了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -xvf mysql-server_8.0.41-1ubuntu24.10_amd64.deb-bundle.tar</span><br><span class="line"><span class="comment"># 里面包含这些依赖包</span></span><br><span class="line">libmysqlclient-dev_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">libmysqlclient21_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-client_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-common_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-client-core_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-client-plugins_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-client_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-server-core_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-server-debug_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-server_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-test-debug_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-community-test_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-server_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line">mysql-testsuite_8.0.41-1ubuntu24.10_amd64.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依次按顺序安装依赖包</span></span><br><span class="line"><span class="comment"># 基础组件</span></span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-common_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="comment"># 核心库</span></span><br><span class="line"><span class="built_in">sudo</span> dpkg -i libmysqlclient21_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i libmysqlclient-dev_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="comment"># 客户端组件</span></span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-client-core_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-client-plugins_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-client_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-client_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="comment"># 服务器组件</span></span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-server-core_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-server_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-server_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="comment"># 测试调试组件</span></span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-test_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-community-test-debug_8.0.41-1ubuntu24.10_amd64.deb</span><br><span class="line"><span class="built_in">sudo</span> dpkg -i mysql-testsuite_8.0.41-1ubuntu24.10_amd64.deb</span><br></pre></td></tr></table></figure>
<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure>
<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><h3 id="使用yum安装"><a href="#使用yum安装" class="headerlink" title="使用yum安装"></a>使用yum安装</h3><p>安装所需要的依赖包。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> yum install -y yum-utils</span><br></pre></td></tr></table></figure>
<p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。</p>
<p>执行下面的命令添加 <code>yum</code> 软件源：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">sudo</span> sed -i <span class="string">&#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure>
<p>有了依赖包之后，就可以直接安装Docker了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<h3 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h3><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">$ <span class="built_in">sudo</span> sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p>
<h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker</span><br><span class="line">$ <span class="built_in">sudo</span> systemctl start docker</span><br></pre></td></tr></table></figure>
<h2 id="建立docker用户组"><a href="#建立docker用户组" class="headerlink" title="建立docker用户组"></a>建立docker用户组</h2><p>建立<code>docker</code>组</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> groupadd docker</span><br></pre></td></tr></table></figure>
<p>将当前用户加入<code>docker</code>组中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>
<h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><h3 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h3><ol>
<li>阿里云加速器，可以去阿里云的关于镜像的管理控制台去获取。</li>
<li>网易云加速器，<code>https://hub-mirror.c.163.com</code></li>
<li>百度云加速器，<code>https://mirror.baidubce.com</code></li>
</ol>
<h3 id="配置docker加速器"><a href="#配置docker加速器" class="headerlink" title="配置docker加速器"></a>配置docker加速器</h3><p>查看之前是否配置过镜像地址。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="built_in">cat</span> docker | grep <span class="string">&#x27;\-\-registry\-mirror&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果该命令有输出，那么请执行 <code>$ systemctl cat docker</code> 查看 <code>ExecStart=</code> 出现的位置，修改对应的文件内容去掉 <code>--registry-mirror</code> 参数及其值，并按接下来的步骤进行配置。</p>
<p>如果以上命令没有任何输出，那么就可以在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="重启docker服务"><a href="#重启docker服务" class="headerlink" title="重启docker服务"></a>重启docker服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line">$ <span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="测试Docker是否安装成功"><a href="#测试Docker是否安装成功" class="headerlink" title="测试Docker是否安装成功"></a>测试Docker是否安装成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker run --<span class="built_in">rm</span> hello-world</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">&quot;hello-world&quot;</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>
<p>出现以上内容则表示安装成功。</p>
<h1 id="Docker离线安装"><a href="#Docker离线安装" class="headerlink" title="Docker离线安装"></a>Docker离线安装</h1><p>下载Docker离线安装包。</p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://download.docker.com/linux/static/stable/x86_64/">下载地址</a></p>
<p>安装脚本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;解压tar包&#x27;</span></span><br><span class="line">tar -xvf <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;将docker目录下所有文件复制到/usr/bin目录&#x27;</span></span><br><span class="line"><span class="built_in">cp</span> docker/* /usr/bin</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;将docker.service 复制到/etc/systemd/system/目录&#x27;</span></span><br><span class="line"><span class="built_in">cp</span> docker.service /etc/systemd/system/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;添加文件可执行权限&#x27;</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/systemd/system/docker.service</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;重新加载配置文件&#x27;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;启动docker&#x27;</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;设置开机自启&#x27;</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;docker安装成功&#x27;</span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure>
<p>卸载脚本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;停止docker&#x27;</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;删除docker.service&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> -f /etc/systemd/system/docker.service</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;删除docker文件&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /usr/bin/docker*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;重新加载配置文件&#x27;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;卸载成功&#x27;</span></span><br></pre></td></tr></table></figure>
<p>通过安装包，执行安装脚本。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh install.sh docker-23.0.3.tgz</span><br></pre></td></tr></table></figure>
<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>以上基本都是网上搜集的教程，基本都是复制粘贴，有些已经找不到出处，有出处的我尽量标明在以下链接。</p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://yeasy.gitbook.io/docker_practice/">Docker</a></p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://chexl.blog.csdn.net/article/details/127932711?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-127932711-blog-122311325.235%5Ev28%5Epc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-127932711-blog-122311325.235%5Ev28%5Epc_relevant_default&amp;utm_relevant_index=2">Docker离线安装</a></p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://blog.csdn.net/m0_61035257/article/details/125705400">Java安装</a></p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://blog.csdn.net/BodyandSoul/article/details/121297563">Redis离线安装</a></p>
<p><a target="_blank" rel="noopener external nofollow noreferrer" href="https://blog.csdn.net/gogospecter/article/details/149069779">离线安装nginx</a></p>
</article><div class="post-copyright"><div class="post-copyright__author"><span class="post-copyright-meta"><i class="fas fa-circle-user fa-fw"></i>文章作者: </span><span class="post-copyright-info"><a href="https://yww52.com">yww</a></span></div><div class="post-copyright__type"><span class="post-copyright-meta"><i class="fas fa-square-arrow-up-right fa-fw"></i>文章链接: </span><span class="post-copyright-info"><a href="https://yww52.com/posts/58d09dd7">https://yww52.com/posts/58d09dd7</a></span></div><div class="post-copyright__notice"><span class="post-copyright-meta"><i class="fas fa-circle-exclamation fa-fw"></i>版权声明: </span><span class="post-copyright-info">本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow noreferrer" target="_blank">CC BY-NC-SA 4.0</a> 许可协议。转载请注明来源 <a href="https://yww52.com" target="_blank">yww</a>！</span></div></div><div class="tag_share"><div class="post-share"><div class="social-share" data-image="https://img.yww52.com/2023/4/2023-4-11top_img.jpg" data-sites="facebook,twitter,wechat,weibo,qq"></div><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/css/share.min.css" media="print" onload="this.media='all'"><script src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/js/social-share.min.js" defer></script></div></div><nav class="pagination-post" id="pagination"><a class="pagination-related" href="/posts/91f4854c" title="Java图片处理"><img class="cover" src="https://img.yww52.com/2023/4/2023-4-18top_img.jpg" onerror="onerror=null;src='/img/404.jpg'" alt="cover of previous post"><div class="info"><div class="info-1"><div class="info-item-1">上一篇</div><div class="info-item-2">Java图片处理</div></div><div class="info-2"><div class="info-item-1">开发环境本次处理图片主要使用的依赖是opencv，具体的方法可以去参照官网。  首先去opencv官网去下载与系统对应的jar包和依赖文件。（这里以windows举例）  选择windows版本opencv-4.7.0-windows.exe，然后进行安装。(linux的版本需要先进行编译后获取动态库和jar包)  在安装目录的opencv/build/java的目录下，获得jar包和动态库文件。（注意是安装目录里）  在maven项目引入opencv依赖。 12345678&lt;!-- OpenCv  --&gt;&lt;dependency&gt;    &lt;groupId&gt;org.opencv&lt;/groupId&gt;    &lt;artifactId&gt;opencv&lt;/artifactId&gt;    &lt;version&gt;4.7.0&lt;/version&gt;    &lt;scope&gt;system&lt;/scope&gt;   ...</div></div></div></a><a class="pagination-related" href="/posts/4e5ad84e" title="MybatisPlus常用方法"><img class="cover" src="https://img.yww52.com/2023/2/2023-2-2top_img.jpg" onerror="onerror=null;src='/img/404.jpg'" alt="cover of next post"><div class="info text-right"><div class="info-1"><div class="info-item-1">下一篇</div><div class="info-item-2">MybatisPlus常用方法</div></div><div class="info-2"><div class="info-item-1">简介记录一下常用的一些使用方法。 测试环境表SQL123456789101112131415161718DROP TABLE IF EXISTS `user`;CREATE TABLE `user` (    `id`            CHAR(19)        NOT NULL                        COMMENT &#x27;数据ID&#x27;,  	`username`      VARCHAR(200)    NOT NULL                        COMMENT &#x27;用户名&#x27;,  	`password`      VARCHAR(200)    NOT NULL                        COMMENT &#x27;密码&#x27;,  	`nickname`      VARCHAR(200)    NULL    DEFAULT &#x27;用户昵称&#x27;       COMMENT &#x27;用户昵称&#x27;,  	`avatar`       ...</div></div></div></a></nav></div><div class="aside-content" id="aside-content"><div class="card-widget card-info text-center"><div class="avatar-img"><img src="/img/butterfly-icon.png" onerror="this.onerror=null;this.src='/img/friend_404.gif'" alt="avatar"/></div><div class="author-info-name">yww</div><div class="author-info-description">debug myself</div><div class="site-data"><a href="/archives/"><div class="headline">文章</div><div class="length-num">72</div></a><a href="/tags/"><div class="headline">标签</div><div class="length-num">0</div></a><a href="/categories/"><div class="headline">分类</div><div class="length-num">16</div></a></div><a id="card-info-btn" target="_blank" rel="noopener external nofollow noreferrer" href="https://github.com/xxxxxx"><i class="fab fa-github"></i><span>Follow Me</span></a></div><div class="card-widget card-announcement"><div class="item-headline"><i class="fas fa-bullhorn fa-shake"></i><span>公告</span></div><div class="announcement_content">This is my Blog</div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="fas fa-stream"></i><span>目录</span><span class="toc-percentage"></span></div><div class="toc-content"><ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E7%8E%AF%E5%A2%83"><span class="toc-number">1.</span> <span class="toc-text">环境</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Java"><span class="toc-number">2.</span> <span class="toc-text">Java</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%8D%B8%E8%BD%BD%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%B8%A6%E7%9A%84JDK"><span class="toc-number">2.1.</span> <span class="toc-text">卸载系统自带的JDK</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E7%9A%84JDK"><span class="toc-number">2.1.1.</span> <span class="toc-text">查看系统安装的JDK</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8D%B8%E8%BD%BD%E5%AE%89%E8%A3%85%E7%9A%84JDK"><span class="toc-number">2.1.2.</span> <span class="toc-text">卸载安装的JDK</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%BD%BF%E7%94%A8yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85Java"><span class="toc-number">2.2.</span> <span class="toc-text">使用yum方式安装Java</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8B%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85%E7%9A%84%E7%89%88%E6%9C%AC"><span class="toc-number">2.2.1.</span> <span class="toc-text">查看可以安装的版本</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%89%E8%A3%85JDK"><span class="toc-number">2.2.2.</span> <span class="toc-text">安装JDK</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8BJDK%E5%AE%89%E8%A3%85%E7%9A%84%E7%9B%AE%E5%BD%95"><span class="toc-number">2.2.3.</span> <span class="toc-text">查看JDK安装的目录</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8D%B8%E8%BD%BDyum%E4%B8%8B%E8%BD%BD%E7%9A%84JDK"><span class="toc-number">2.2.4.</span> <span class="toc-text">卸载yum下载的JDK</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85JDK"><span class="toc-number">2.3.</span> <span class="toc-text">手动安装JDK</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8C%85"><span class="toc-number">2.3.1.</span> <span class="toc-text">下载安装包</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%A7%A3%E5%8E%8B%E5%AE%89%E8%A3%85%E5%8C%85"><span class="toc-number">2.3.2.</span> <span class="toc-text">解压安装包</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"><span class="toc-number">2.3.3.</span> <span class="toc-text">配置环境变量</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8D%B8%E8%BD%BDJDK"><span class="toc-number">2.3.4.</span> <span class="toc-text">卸载JDK</span></a></li></ol></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Redis"><span class="toc-number">3.</span> <span class="toc-text">Redis</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#Redis%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85"><span class="toc-number">3.1.</span> <span class="toc-text">Redis离线安装</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9"><span class="toc-number">3.2.</span> <span class="toc-text">Redis配置文件修改</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Nginx"><span class="toc-number">4.</span> <span class="toc-text">Nginx</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#APT%E5%8C%85%E7%AE%A1%E7%90%86%E5%AE%89%E8%A3%85"><span class="toc-number">4.1.</span> <span class="toc-text">APT包管理安装</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%BA%90%E7%A0%81%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85"><span class="toc-number">4.2.</span> <span class="toc-text">源码离线安装</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#Nginx%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD"><span class="toc-number">4.2.1.</span> <span class="toc-text">Nginx依赖下载</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Nginx"><span class="toc-number">4.2.2.</span> <span class="toc-text">编译安装Nginx</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%85%8D%E7%BD%AE-Systemd-%E6%9C%8D%E5%8A%A1"><span class="toc-number">4.2.3.</span> <span class="toc-text">配置 Systemd 服务</span></a></li></ol></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Mysql"><span class="toc-number">5.</span> <span class="toc-text">Mysql</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%98%E7%BD%91DEB%E5%8C%85%E5%AE%89%E8%A3%85"><span class="toc-number">5.0.1.</span> <span class="toc-text">官网DEB包安装</span></a></li></ol></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Docker"><span class="toc-number">6.</span> <span class="toc-text">Docker</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%8D%B8%E8%BD%BD%E6%97%A7%E7%89%88%E6%9C%AC"><span class="toc-number">6.1.</span> <span class="toc-text">卸载旧版本</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%AE%89%E8%A3%85Docker"><span class="toc-number">6.2.</span> <span class="toc-text">安装Docker</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BD%BF%E7%94%A8yum%E5%AE%89%E8%A3%85"><span class="toc-number">6.2.1.</span> <span class="toc-text">使用yum安装</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85"><span class="toc-number">6.2.2.</span> <span class="toc-text">使用脚本自动安装</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%90%AF%E5%8A%A8Docker"><span class="toc-number">6.3.</span> <span class="toc-text">启动Docker</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%BB%BA%E7%AB%8Bdocker%E7%94%A8%E6%88%B7%E7%BB%84"><span class="toc-number">6.4.</span> <span class="toc-text">建立docker用户组</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F"><span class="toc-number">6.5.</span> <span class="toc-text">镜像加速</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E5%99%A8"><span class="toc-number">6.5.1.</span> <span class="toc-text">镜像加速器</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%85%8D%E7%BD%AEdocker%E5%8A%A0%E9%80%9F%E5%99%A8"><span class="toc-number">6.5.2.</span> <span class="toc-text">配置docker加速器</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%87%8D%E5%90%AFdocker%E6%9C%8D%E5%8A%A1"><span class="toc-number">6.5.3.</span> <span class="toc-text">重启docker服务</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%B5%8B%E8%AF%95Docker%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F"><span class="toc-number">6.6.</span> <span class="toc-text">测试Docker是否安装成功</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85"><span class="toc-number">7.</span> <span class="toc-text">Docker离线安装</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%A3%B0%E6%98%8E"><span class="toc-number">8.</span> <span class="toc-text">声明</span></a></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="fas fa-history"></i><span>最新文章</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/posts/91f4854c" title="Java图片处理"><img src="https://img.yww52.com/2023/4/2023-4-18top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="Java图片处理"/></a><div class="content"><a class="title" href="/posts/91f4854c" title="Java图片处理">Java图片处理</a><time datetime="2023-04-17T16:00:00.000Z" title="发表于 2023-04-18 00:00:00">2023-04-18</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/58d09dd7" title="开发环境配置"><img src="https://img.yww52.com/2023/4/2023-4-11top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="开发环境配置"/></a><div class="content"><a class="title" href="/posts/58d09dd7" title="开发环境配置">开发环境配置</a><time datetime="2023-04-10T16:00:00.000Z" title="发表于 2023-04-11 00:00:00">2023-04-11</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/4e5ad84e" title="MybatisPlus常用方法"><img src="https://img.yww52.com/2023/2/2023-2-2top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="MybatisPlus常用方法"/></a><div class="content"><a class="title" href="/posts/4e5ad84e" title="MybatisPlus常用方法">MybatisPlus常用方法</a><time datetime="2023-02-01T16:00:00.000Z" title="发表于 2023-02-02 00:00:00">2023-02-02</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/622a5765" title="2022年度总结"><img src="https://img.yww52.com/2023/1/2023-1-1/top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="2022年度总结"/></a><div class="content"><a class="title" href="/posts/622a5765" title="2022年度总结">2022年度总结</a><time datetime="2022-12-31T16:00:00.000Z" title="发表于 2023-01-01 00:00:00">2023-01-01</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/e31003e0" title="SpringBoot部署启动"><img src="https://img.yww52.com/2022/09/2022-9-28top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="SpringBoot部署启动"/></a><div class="content"><a class="title" href="/posts/e31003e0" title="SpringBoot部署启动">SpringBoot部署启动</a><time datetime="2022-09-27T16:00:00.000Z" title="发表于 2022-09-28 00:00:00">2022-09-28</time></div></div></div></div></div></div></main><footer id="footer"><div id="footer-wrap"><div class="copyright">&copy;2019 - 2025 By yww</div><div class="framework-info"><span>框架 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://hexo.io">Hexo</a><span class="footer-separator">|</span><span>主题 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></div></div></footer></div><div id="rightside"><div id="rightside-config-hide"><button id="readmode" type="button" title="阅读模式"><i class="fas fa-book-open"></i></button><button id="darkmode" type="button" title="日间和夜间模式切换"><i class="fas fa-adjust"></i></button><button id="hide-aside-btn" type="button" title="单栏和双栏切换"><i class="fas fa-arrows-alt-h"></i></button></div><div id="rightside-config-show"><button id="rightside-config" type="button" title="设置"><i class="fas fa-cog fa-spin"></i></button><button class="close" id="mobile-toc-button" type="button" title="目录"><i class="fas fa-list-ul"></i></button><button id="go-up" type="button" title="回到顶部"><span class="scroll-percent"></span><i class="fas fa-arrow-up"></i></button></div></div><div><script src="/js/utils.js"></script><script src="/js/main.js"></script><div class="js-pjax"></div><script async data-pjax src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script></div><!-- hexo injector body_end start --><script async src="//at.alicdn.com/t/font_2032782_8d5kxvn09md.js"></script><script data-pjax src="/live2d-models/index.min.js"></script><script>const oml2d = OML2D.loadOml2d({dockedPosition:"left",mobileDisplay:false,parentElement:document.body,primaryColor:"#d0c3fc",sayHello:true,models:[{"path":["/live2d-models/慕鸾/86.model3.json","/live2d-models/慕鸾婚服/116.model3.json","/live2d-models/小天使/qc.model3.json"],"name":"慕鸾","position":[-70,0],"scale":0.09,"stageStyle":{"width":250,"height":250},"mobilePosition":[-10,23],"mobileScale":0.1,"mobileStageStyle":{"width":180,"height":166},"motionPreloadStrategy":"ALL"}],menus:{disable:false},tips:{style: {"width":200,"height":110,"left":"calc(50% - 20px)","top":"-100px"},mobileStyle: {"width":180,"height":80,"left":"calc(50% - 30px)","top":"-100px"},idleTips:{interval:15000,message:["你好呀~","欢迎来到我的小站~"]}},statusBar:{"disable":false}});</script><!-- hexo injector body_end end --></body></html>