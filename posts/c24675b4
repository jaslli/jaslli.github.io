<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover"><title>MySQL | yww</title><meta name="author" content="yww"><meta name="copyright" content="yww"><meta name="format-detection" content="telephone=no"><meta name="theme-color" content="ffffff"><meta name="description" content="基本概念连接数据库12345-- username 则为自己的用户名，一般为root，password为密码	mysql -u[username] -p[password]	mysql -u[username] -p-- 断开连接，即退出数据库操作页面	exit MySQL的关键字是不区分大小写的，这里我全部用大写来记录。  DDL数据定义语言数据库操作创建数据库12CREATE DATABASE">
<meta property="og:type" content="article">
<meta property="og:title" content="MySQL">
<meta property="og:url" content="https://yww52.com/posts/c24675b4">
<meta property="og:site_name" content="yww">
<meta property="og:description" content="基本概念连接数据库12345-- username 则为自己的用户名，一般为root，password为密码	mysql -u[username] -p[password]	mysql -u[username] -p-- 断开连接，即退出数据库操作页面	exit MySQL的关键字是不区分大小写的，这里我全部用大写来记录。  DDL数据定义语言数据库操作创建数据库12CREATE DATABASE">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://img.yww52.com/2020/11/2020-11-1top_img.jpg">
<meta property="article:published_time" content="2020-10-31T16:00:00.000Z">
<meta property="article:modified_time" content="2025-07-24T14:35:29.809Z">
<meta property="article:author" content="yww">
<meta property="article:tag" content="yw,yww">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://img.yww52.com/2020/11/2020-11-1top_img.jpg"><script type="application/ld+json">{
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": "MySQL",
  "url": "https://yww52.com/posts/c24675b4",
  "image": "https://img.yww52.com/2020/11/2020-11-1top_img.jpg",
  "datePublished": "2020-10-31T16:00:00.000Z",
  "dateModified": "2025-07-24T14:35:29.809Z",
  "author": [
    {
      "@type": "Person",
      "name": "yww",
      "url": "https://yww52.com"
    }
  ]
}</script><link rel="shortcut icon" href="/yww/img/favicon.jpeg"><link rel="canonical" href="https://yww52.com/posts/c24675b4"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//hm.baidu.com"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="stylesheet" href="/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.css" media="print" onload="this.media='all'"><script>
    (() => {
      
    const saveToLocal = {
      set: (key, value, ttl) => {
        if (!ttl) return
        const expiry = Date.now() + ttl * 86400000
        localStorage.setItem(key, JSON.stringify({ value, expiry }))
      },
      get: key => {
        const itemStr = localStorage.getItem(key)
        if (!itemStr) return undefined
        const { value, expiry } = JSON.parse(itemStr)
        if (Date.now() > expiry) {
          localStorage.removeItem(key)
          return undefined
        }
        return value
      }
    }

    window.btf = {
      saveToLocal,
      getScript: (url, attr = {}) => new Promise((resolve, reject) => {
        const script = document.createElement('script')
        script.src = url
        script.async = true
        Object.entries(attr).forEach(([key, val]) => script.setAttribute(key, val))
        script.onload = script.onreadystatechange = () => {
          if (!script.readyState || /loaded|complete/.test(script.readyState)) resolve()
        }
        script.onerror = reject
        document.head.appendChild(script)
      }),
      getCSS: (url, id) => new Promise((resolve, reject) => {
        const link = document.createElement('link')
        link.rel = 'stylesheet'
        link.href = url
        if (id) link.id = id
        link.onload = link.onreadystatechange = () => {
          if (!link.readyState || /loaded|complete/.test(link.readyState)) resolve()
        }
        link.onerror = reject
        document.head.appendChild(link)
      }),
      addGlobalFn: (key, fn, name = false, parent = window) => {
        if (!true && key.startsWith('pjax')) return
        const globalFn = parent.globalFn || {}
        globalFn[key] = globalFn[key] || {}
        globalFn[key][name || Object.keys(globalFn[key]).length] = fn
        parent.globalFn = globalFn
      }
    }
  
      
      const activateDarkMode = () => {
        document.documentElement.setAttribute('data-theme', 'dark')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#0d0d0d')
        }
      }
      const activateLightMode = () => {
        document.documentElement.setAttribute('data-theme', 'light')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', 'ffffff')
        }
      }

      btf.activateDarkMode = activateDarkMode
      btf.activateLightMode = activateLightMode

      const theme = saveToLocal.get('theme')
    
          theme === 'dark' ? activateDarkMode() : theme === 'light' ? activateLightMode() : null
        
      
      const asideStatus = saveToLocal.get('aside-status')
      if (asideStatus !== undefined) {
        document.documentElement.classList.toggle('hide-aside', asideStatus === 'hide')
      }
    
      
    const detectApple = () => {
      if (/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)) {
        document.documentElement.classList.add('apple')
      }
    }
    detectApple()
  
    })()
  </script><script>var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?136a6aeed7736be835cf2e59b702bfd6";
  var s = document.getElementsByTagName("script")[0];
  s.parentNode.insertBefore(hm, s);
})();
btf.addGlobalFn('pjaxComplete', () => {
  _hmt.push(['_trackPageview',window.location.pathname])
}, 'baidu_analytics')
</script><script>const GLOBAL_CONFIG = {
  root: '/',
  algolia: undefined,
  localSearch: {"path":"/search.xml","preload":true,"top_n_per_article":1,"unescape":false,"languages":{"hits_empty":"未找到符合您查询的内容：${query}","hits_stats":"共找到 ${hits} 篇文章"}},
  translate: undefined,
  highlight: {"plugin":"highlight.js","highlightCopy":true,"highlightLang":true,"highlightHeightLimit":300,"highlightFullpage":false,"highlightMacStyle":true},
  copy: {
    success: '复制成功',
    error: '复制失败',
    noSupport: '浏览器不支持'
  },
  relativeDate: {
    homepage: false,
    post: false
  },
  runtime: '天',
  dateSuffix: {
    just: '刚刚',
    min: '分钟前',
    hour: '小时前',
    day: '天前',
    month: '个月前'
  },
  copyright: undefined,
  lightbox: 'null',
  Snackbar: {"chs_to_cht":"已切换为繁体中文","cht_to_chs":"已切换为简体中文","day_to_night":"已切换为深色模式","night_to_day":"已切换为浅色模式","bgLight":"#CD9DFA","bgDark":"#1f1f1f","position":"top-center"},
  infinitegrid: {
    js: 'https://cdn.jsdelivr.net/npm/@egjs/infinitegrid/dist/infinitegrid.min.js',
    buttonText: '加载更多'
  },
  isPhotoFigcaption: true,
  islazyloadPlugin: true,
  isAnchor: false,
  percent: {
    toc: true,
    rightside: true,
  },
  autoDarkmode: false
}</script><script id="config-diff">var GLOBAL_CONFIG_SITE = {
  title: 'MySQL',
  isHighlightShrink: false,
  isToc: true,
  pageType: 'post'
}</script><script data-pjax charset="UTF-8" id="LA_COLLECT" src="/yww/scripts/js-sdk-pro.min.js"></script><script data-pjax>LA.init({id:"3H0GBfojNsZxwWln",ck:"3H0GBfojNsZxwWln"})</script><meta name="generator" content="Hexo 7.3.0"></head><body><div id="web_bg" style="background-color: #efefef;"></div><div id="sidebar"><div id="menu-mask"></div><div id="sidebar-menus"><div class="avatar-img text-center"><img src= "/yww/img/404.jpg" data-lazy-src="https://img.yww52.com/image/avatar.jpg" onerror="this.onerror=null;this.src='/yww/img/loading.gif'" alt="avatar"/></div><div class="site-data text-center"><a href="/archives/"><div class="headline">文章</div><div class="length-num">72</div></a><a href="/tags/"><div class="headline">标签</div><div class="length-num">0</div></a><a href="/categories/"><div class="headline">分类</div><div class="length-num">16</div></a></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><i class="fa-fw iconfont icon-home"></i><span> 首页</span></a></div><div class="menus_item"><a class="site-page" href="/archives/"><i class="fa-fw iconfont icon-archives"></i><span> 归档</span></a></div><div class="menus_item"><a class="site-page" href="/categories/"><i class="fa-fw iconfont icon-categories"></i><span> 分类</span></a></div><div class="menus_item"><a class="site-page" href="/link/"><i class="fa-fw iconfont icon-link"></i><span> 友链</span></a></div><div class="menus_item"><a class="site-page" href="/comment/"><i class="fa-fw iconfont icon-comment"></i><span> 留言页</span></a></div><div class="menus_item"><a class="site-page" href="/about/"><i class="fa-fw iconfont icon-about"></i><span> 关于</span></a></div></div></div></div><div class="post" id="body-wrap"><header class="post-bg" id="page-header" style="background-image: url(https://img.yww52.com/2020/11/2020-11-1top_img.jpg);"><nav id="nav"><span id="blog-info"><a class="nav-site-title" href="/"><span class="site-name">yww</span></a><a class="nav-page-title" href="/"><span class="site-name">MySQL</span><span class="site-name"><i class="fa-solid fa-circle-arrow-left"></i><span>  返回首页</span></span></a></span><div id="menus"><div id="search-button"><span class="site-page social-icon search"><i class="fas fa-search fa-fw"></i><span> 搜索</span></span></div><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><i class="fa-fw iconfont icon-home"></i><span> 首页</span></a></div><div class="menus_item"><a class="site-page" href="/archives/"><i class="fa-fw iconfont icon-archives"></i><span> 归档</span></a></div><div class="menus_item"><a class="site-page" href="/categories/"><i class="fa-fw iconfont icon-categories"></i><span> 分类</span></a></div><div class="menus_item"><a class="site-page" href="/link/"><i class="fa-fw iconfont icon-link"></i><span> 友链</span></a></div><div class="menus_item"><a class="site-page" href="/comment/"><i class="fa-fw iconfont icon-comment"></i><span> 留言页</span></a></div><div class="menus_item"><a class="site-page" href="/about/"><i class="fa-fw iconfont icon-about"></i><span> 关于</span></a></div></div><div id="toggle-menu"><span class="site-page"><i class="fas fa-bars fa-fw"></i></span></div></div></nav><div id="post-info"><h1 class="post-title">MySQL</h1><div id="post-meta"><div class="meta-firstline"><span class="post-meta-date"><i class="far fa-calendar-alt fa-fw post-meta-icon"></i><span class="post-meta-label">发表于</span><time class="post-meta-date-created" datetime="2020-10-31T16:00:00.000Z" title="发表于 2020-11-01 00:00:00">2020-11-01</time><span class="post-meta-separator">|</span><i class="fas fa-history fa-fw post-meta-icon"></i><span class="post-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2025-07-24T14:35:29.809Z" title="更新于 2025-07-24 22:35:29">2025-07-24</time></span><span class="post-meta-categories"><span class="post-meta-separator">|</span><i class="fas fa-inbox fa-fw post-meta-icon"></i><a class="post-meta-categories" href="/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</a></span></div><div class="meta-secondline"><span class="post-meta-separator">|</span><span class="post-meta-wordcount"><i class="far fa-file-word fa-fw post-meta-icon"></i><span class="post-meta-label">总字数:</span><span class="word-count">2k</span><span class="post-meta-separator">|</span><i class="far fa-clock fa-fw post-meta-icon"></i><span class="post-meta-label">阅读时长:</span><span>8分钟</span></span><span class="post-meta-separator">|</span><span class="post-meta-pv-cv" id="" data-flag-title=""><i class="far fa-eye fa-fw post-meta-icon"></i><span class="post-meta-label">浏览量:</span><span id="busuanzi_value_page_pv"><i class="fa-solid fa-spinner fa-spin"></i></span></span></div></div></div></header><main class="layout" id="content-inner"><div id="post"><article class="container post-content" id="article-container"><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h1 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- username 则为自己的用户名，一般为root，password为密码</span><br><span class="line">	mysql -u[username] -p[password]</span><br><span class="line">	mysql -u[username] -p</span><br><span class="line">-- 断开连接，即退出数据库操作页面</span><br><span class="line">	exit</span><br></pre></td></tr></table></figure>
<div class="note info flat"><p>MySQL的关键字是不区分大小写的，这里我全部用大写来记录。</p>
</div>
<h1 id="DDL数据定义语言"><a href="#DDL数据定义语言" class="headerlink" title="DDL数据定义语言"></a>DDL数据定义语言</h1><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [数据库名];</span><br><span class="line">CREATE DATABASE IF NOT EXISTS [数据库名];</span><br></pre></td></tr></table></figure>
<h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [数据库名];</span><br><span class="line">DROP DATABASE IF EXISTS [数据库名];</span><br></pre></td></tr></table></figure>
<h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查看所有的数据库</span><br><span class="line">	SHOW DATABASES;</span><br><span class="line">-- 查看创建库使用的语句</span><br><span class="line">	SHOW CREATE DATABASES [库名];</span><br></pre></td></tr></table></figure>
<h3 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 切换到指定的数据库</span><br><span class="line">	USE [数据库名];</span><br><span class="line">--  数据库名和表名如果是特殊的词，就需要用``来区分</span><br></pre></td></tr></table></figure>
<h2 id="表中的数据类型"><a href="#表中的数据类型" class="headerlink" title="表中的数据类型"></a>表中的数据类型</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">大小</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tinyint</td>
<td style="text-align:center">很小的一个数据</td>
<td style="text-align:center">1个字节</td>
</tr>
<tr>
<td style="text-align:center">smallint</td>
<td style="text-align:center">较小的一个数据</td>
<td style="text-align:center">2个字节</td>
</tr>
<tr>
<td style="text-align:center">mediumint</td>
<td style="text-align:center">中等大小的一个数据</td>
<td style="text-align:center">3个字节</td>
</tr>
<tr>
<td style="text-align:center">int</td>
<td style="text-align:center">标准大小的数据(整数常用)</td>
<td style="text-align:center">4个字节</td>
</tr>
<tr>
<td style="text-align:center">bigint</td>
<td style="text-align:center">较大的数据</td>
<td style="text-align:center">8个字节</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:center">单精度浮点数</td>
<td style="text-align:center">4个字节</td>
</tr>
<tr>
<td style="text-align:center">double</td>
<td style="text-align:center">双精度浮点数</td>
<td style="text-align:center">8个字节</td>
</tr>
<tr>
<td style="text-align:center">decimal</td>
<td style="text-align:center">字符串形式的浮点数(用来解决浮点数精度问题)</td>
</tr>
</tbody>
</table>
</div>
<h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">大小</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">固定大小的字符串</td>
<td style="text-align:center">0~255</td>
</tr>
<tr>
<td style="text-align:center">varchar</td>
<td style="text-align:center">可变的字符串，对应Java的String</td>
<td style="text-align:center">0~65535</td>
</tr>
<tr>
<td style="text-align:center">tinytext</td>
<td style="text-align:center">微型文本</td>
<td style="text-align:center">2^8-1</td>
</tr>
<tr>
<td style="text-align:center">text</td>
<td style="text-align:center">文本串</td>
<td style="text-align:center">2^16-1</td>
</tr>
</tbody>
</table>
</div>
<h3 id="时间与日期"><a href="#时间与日期" class="headerlink" title="时间与日期"></a>时间与日期</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">格式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">date</td>
<td style="text-align:center">日期</td>
<td style="text-align:center">YYYY-MM-DD</td>
</tr>
<tr>
<td style="text-align:center">time</td>
<td style="text-align:center">时间</td>
<td style="text-align:center">HH:mm:ss</td>
</tr>
<tr>
<td style="text-align:center">datetime</td>
<td style="text-align:center">常用的时间格式，即date+time</td>
<td style="text-align:center">YYYY-MM-DD HH:mm:ss</td>
</tr>
<tr>
<td style="text-align:center">timestamp</td>
<td style="text-align:center">1970.1.1到现在时间的毫秒数</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">year</td>
<td style="text-align:center">年份表示</td>
</tr>
</tbody>
</table>
</div>
<div class="note info flat"><p>MM与mm分大小写是为了区分月份和分钟。<br>HH大写是为了表示是24小时制，hh为12小时制。<br>YYYY表示week-based-year,即只要本周跨年，那这周就算入下一年。<br>yyyy就表示真实年份。</p>
</div>
<h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><p>未知的数据类型，不建议参与运算。</p>
<h2 id="字段属性"><a href="#字段属性" class="headerlink" title="字段属性"></a>字段属性</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">关键字</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">NULL</td>
<td style="text-align:center">该数据列可以包含NULL值</td>
</tr>
<tr>
<td style="text-align:center">NOT NULL</td>
<td style="text-align:center">该数据列不允许为NULL值</td>
</tr>
<tr>
<td style="text-align:center">DEFAULT</td>
<td style="text-align:center">为数据列指定默认值</td>
</tr>
<tr>
<td style="text-align:center">PRIMARY KEY</td>
<td style="text-align:center">设数据列为主键</td>
</tr>
<tr>
<td style="text-align:center">AUTO_INCREMENT</td>
<td style="text-align:center">设数据列为自动递增，设用于整数</td>
</tr>
<tr>
<td style="text-align:center">UNSIGNED</td>
<td style="text-align:center">设数据列为无符号</td>
</tr>
<tr>
<td style="text-align:center">CHARACTER SET [name]</td>
<td style="text-align:center">为数据列指定一个字符集</td>
</tr>
<tr>
<td style="text-align:center">COMMENT</td>
<td style="text-align:center">注释</td>
</tr>
</tbody>
</table>
</div>
<h2 id="表的操作"><a href="#表的操作" class="headerlink" title="表的操作"></a>表的操作</h2><h3 id="查看表"><a href="#查看表" class="headerlink" title="查看表"></a>查看表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 进入数据库后查看该数据库所有的表</span><br><span class="line">	SHOW TABLES [表名];</span><br><span class="line">-- 查看创建表使用的语句</span><br><span class="line">	SHOW CREATE TABLE [表名];</span><br></pre></td></tr></table></figure>
<h3 id="查看表中的信息"><a href="#查看表中的信息" class="headerlink" title="查看表中的信息"></a>查看表中的信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 查看表中的具体信息，即结构</span><br><span class="line">	DESCRIBE [表名];</span><br><span class="line">	DESC [表名];</span><br></pre></td></tr></table></figure>
<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">	CREATE TABLE IF NOT EXISTS `[表名]`(属性)[表类型][设置字符集]</span><br><span class="line">-- 例子</span><br><span class="line">	CREATE TABLE IF NOT EXISTS `user`(</span><br><span class="line">		`id` INT(5) NOT NULL AUTO_INCREMENT COMMENT &#x27;id号&#x27;,</span><br><span class="line">        `username` VARCHAR(20) NOT NULL COMMENT &#x27;用户名&#x27;,</span><br><span class="line">        `password` VARCHAR(20) NOT NULL COMMENT &#x27;密码&#x27;,</span><br><span class="line">        `sex` VARCHAR(2) COMMENT &#x27;性别&#x27;,</span><br><span class="line">        `birthday` DATETIME DEFAULT NULL COMMENT &#x27;生日&#x27;,</span><br><span class="line">        `address` VARCHAR(100) DEFAULT NULL COMMENT &#x27;地址&#x27;,</span><br><span class="line">        `email` VARCHAR(50) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">        PRIMARY KEY(`id`)</span><br><span class="line">    )ENGINE=INNODB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure>
<h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 修改表名</span><br><span class="line">	ALTER TABLE [旧表名] RENAME AS [新表名];</span><br><span class="line">-- 增加表的字段</span><br><span class="line">	ALTER TABLE [表名] ADD [属性];</span><br><span class="line">	ALTER TABLE user1 ADD age INT(10) DEFAULT NULL COMMENT &#x27;年龄&#x27;;</span><br><span class="line">-- 修改表的约束</span><br><span class="line">-- CHANGE可以更改列名和列类型，而MODIFY只能修改列类型</span><br><span class="line">-- CHANGE只修改列类型的时候，也要写两个相同的列名</span><br><span class="line">-- 所以只修改列类型建议用MODIFY</span><br><span class="line">	ALTER TABLE [表名] CHANGE [旧列名] [新列名] [类型];</span><br><span class="line">	ALTER TABLE [表名] MODIFY [列名] [类型];</span><br><span class="line">-- 删除表的字段</span><br><span class="line">	ALTER TABLE [表名] DROP [列名];</span><br></pre></td></tr></table></figure>
<h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE [表名];</span><br><span class="line">DROP TABLE IF EXISTS [表名];</span><br></pre></td></tr></table></figure>
<h3 id="添加外键"><a href="#添加外键" class="headerlink" title="添加外键"></a>添加外键</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE [当前表名] ADD CONSTRAINT `FK_[列名]` FOREIGN KEY([列名]) REFERENCES [对象表名]([列名]);</span><br></pre></td></tr></table></figure>
<h1 id="DML数据操纵语言"><a href="#DML数据操纵语言" class="headerlink" title="DML数据操纵语言"></a>DML数据操纵语言</h1><h2 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 插入一条数据</span><br><span class="line">	INSERT INTO [表名]([列名1]，[列名2]，[列名3]) VALUES([值1]，[值2]，[值3]);</span><br><span class="line">	INSERT INTO [表名] VALUES([值1]，[值2]，[值3]);</span><br><span class="line">-- 插入多条语句</span><br><span class="line">	INSERT INTO [表名]([列名1]，[列名2]，[列名3]) VALUES([值1]，[值2]，[值3]),([值1]，[值2]，[值3]);</span><br><span class="line">	INSERT INTO [表名] VALUES([值1]，[值2]，[值3]),([值1]，[值2]，[值3]);</span><br></pre></td></tr></table></figure>
<h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 条件一般使用WHERE</span><br><span class="line">	UPDATE [表名] SET [列名]=[值] [条件];</span><br><span class="line">	UPDATE [表名] SET [列名1]=[值1],[列名2]=[值2] [条件];</span><br></pre></td></tr></table></figure>
<h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 删除数据</span><br><span class="line">	DELETE FORM [表名] [条件];</span><br><span class="line">-- 清空表中数据</span><br><span class="line">	TRUNCATE [表名];</span><br><span class="line">-- TRUNCATE会让自增计数器清零</span><br></pre></td></tr></table></figure>
<h1 id="DQL数据查询语言"><a href="#DQL数据查询语言" class="headerlink" title="DQL数据查询语言"></a>DQL数据查询语言</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `user`(</span><br><span class="line">	`id` INT(5) NOT NULL AUTO_INCREMENT COMMENT &#x27;id号&#x27;,</span><br><span class="line">    `username` VARCHAR(20) NOT NULL COMMENT &#x27;名字&#x27;,</span><br><span class="line">    `password` VARCHAR(20) NOT NULL COMMENT &#x27;密码&#x27;,</span><br><span class="line">    `sex` VARCHAR(2) COMMENT &#x27;性别&#x27;,</span><br><span class="line">    `birthday` DATETIME DEFAULT NULL COMMENT &#x27;生日&#x27;,</span><br><span class="line">    `address` VARCHAR(100) DEFAULT NULL COMMENT &#x27;地址&#x27;,</span><br><span class="line">    `email` VARCHAR(50) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">    PRIMARY KEY(`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure>
<blockquote>
<p>建个表好进行之后的例子</p>
</blockquote>
<h2 id="简单的查询"><a href="#简单的查询" class="headerlink" title="简单的查询"></a>简单的查询</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 查询表中所有信息</span><br><span class="line">	SELECT * FROM [表名];</span><br><span class="line">	SELECT * FROM `user`;</span><br><span class="line">-- 查询表中指定信息</span><br><span class="line">	SELECT [列名1],[列名2] FROM [表名];</span><br><span class="line">	SELECT `id`,`name` FROM `user`;</span><br><span class="line">-- 给结果的字段及表器别名,AS可以省略</span><br><span class="line">	SELECT [列名1] AS [别名1],[列名2] AS [别名2] FROM [表名] AS [别名3];</span><br><span class="line">	SELECT `username` AS &#x27;用户名&#x27;,`password` AS &#x27;密码&#x27; FROM `user` AS &#x27;用户表&#x27;;</span><br><span class="line">-- 处理结果的信息，简单的字符串拼接</span><br><span class="line">	SELECT CONCAT([message],[列名]) FROM [表名];</span><br><span class="line">	SELECT CONCAT(&#x27;用户名为&#x27;,`username`) FROM `user`;</span><br></pre></td></tr></table></figure>
<h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 去除同样的数据</span><br><span class="line">	SELECT DISTINCT `username` FROM `user`;</span><br></pre></td></tr></table></figure>
<h2 id="一些常用连接符"><a href="#一些常用连接符" class="headerlink" title="一些常用连接符"></a>一些常用连接符</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">AND</th>
<th style="text-align:center">&amp;&amp;</th>
<th style="text-align:center">A AND B</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">OR</td>
<td style="text-align:center">\</td>
<td style="text-align:center">\</td>
<td></td>
<td>A OR B</td>
</tr>
<tr>
<td style="text-align:center">NOT</td>
<td style="text-align:center">!</td>
<td style="text-align:center">NOT A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- %代表任意字符,_代表一个字符</span><br><span class="line">	SELECT [列名] FROM [表名] LIKE &#x27;[通配符]&#x27;;</span><br><span class="line">-- 查询用户名第一个字陈的人</span><br><span class="line">	SELECT `username` FROM `user` LIKE &#x27;陈%&#x27; ;</span><br><span class="line">-- 查询用户名第一个字陈且名字中第三个字为明</span><br><span class="line">	SELECT `username` FROM `user` LIKE &#x27;陈_明%&#x27; ;</span><br></pre></td></tr></table></figure>
<h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 查询id为300的用户信息，大于小于同理</span><br><span class="line">	SELECT * FROM `user` WHERE id=300;</span><br><span class="line">-- 查询id在300到400之间的用户信息</span><br><span class="line">	SELECT * FROM `user` WHERE id&gt;=300 AND id&lt;=400;</span><br><span class="line">	SELECT * FROM `user` WHERE id BETWEEN 300 AND 400;</span><br><span class="line">-- 查询id为300，301，302的用户信息</span><br><span class="line">	SELECT * FROM `user` WHERE id=300 AND id=301 AND id=302;</span><br><span class="line">	SELECT * FROM `user` WHERE id IN (300,301,302);</span><br><span class="line">-- 查询邮箱为空的用户信息</span><br><span class="line">	SELECT * FROM `user` WHERE email=&#x27;&#x27;;</span><br><span class="line">	SELECT * FROM `user` WHERE email IS NULL;</span><br><span class="line">-- 查询邮箱不为空的用户信息</span><br><span class="line">	SELECT * FROM `user` WHERE email IS NOT NULL;</span><br></pre></td></tr></table></figure>
<h2 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 首先假设有张部门表depart，有id和department两个属性</span><br><span class="line">-- 查询用户的id，userrname和department这三个属性,相同的属性需要通过别名来划分</span><br><span class="line">-- INNER JOIN</span><br><span class="line">	SELECT s.id,username,departmen FROM student AS s INNER JOIN depart AS d ON s.id=d.id</span><br><span class="line">-- RIGHT JOIN</span><br><span class="line">	SELECT s.id,username,departmen FROM student AS s RIGHT JOIN depart AS d ON s.id=d.id</span><br><span class="line">-- LEFT JOIN</span><br><span class="line">	SELECT s.id,username,departmen FROM student AS s LEFT JOIN depart AS d ON s.id=d.id</span><br><span class="line">-- FULL JOIN</span><br><span class="line">	SELECT s.id,username,departmen FROM student AS s FULL JOIN depart AS d ON s.id=d.id</span><br></pre></td></tr></table></figure>
<ul>
<li>INNER JOIN<br>如果表中有至少一个匹配，则返回行。</li>
<li>RIGHT JOIN<br>即使左表中没有匹配，也从右表返回所有的行。<br>假如depart有id=1000而user表中没有id=1000的数据也会查到id=1000数据，只是在user表的列数据为null。<br>不会查到user表中有而depart表中没有的数据。</li>
<li>LEFT JOIN<br>即使右表中没有匹配，也从左表返回所有的行。<br>假如user有id=1000而depart表中没有id=1000的数据也会查到id=1000数据，只是在depart表的列数据为null。<br>不会查到depart表中有而user表中没有的数据。</li>
<li>FULL JOIN<br>只要其中一个表中存在匹配，则返回行。</li>
</ul>
<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ASC升序,DESC降序</span><br><span class="line">	SELECT * FROM user ORDER BY id ASC</span><br><span class="line">	SELECT * FROM user ORDER BY id DESC</span><br></pre></td></tr></table></figure>
<h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- limit n,m</span><br><span class="line">-- n代表第一个值的坐标(从0开始)，m代表一页的数据多少</span><br><span class="line">-- 查询user表中第一到第五条数据</span><br><span class="line">	SELECT * FROM user LIMIT 0,5</span><br></pre></td></tr></table></figure>
<h2 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP BY"></a>GROUP BY</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 按一个或多个列对结果集进行分组</span><br><span class="line">	SELECT birthday,COUNT(*) FROM user GROUP BY birthday</span><br><span class="line"># 查出每个生日的用户人数多少</span><br></pre></td></tr></table></figure>
<h2 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># HAVING可以让筛选分组后的各组数据</span><br><span class="line">	SELECT birthday,COUNT(*) FROM user GROUP BY birthday HAVING SUM(COUNT(*)) &gt; 100</span><br><span class="line"># 查出大于100个人的生日是同一天的生日</span><br></pre></td></tr></table></figure>
</article><div class="tag_share"><div class="post-share"><div class="social-share" data-image="https://img.yww52.com/2020/11/2020-11-1top_img.jpg" data-sites="facebook,twitter,wechat,weibo,qq"></div><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/css/share.min.css" media="print" onload="this.media='all'"><script src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/js/social-share.min.js" defer></script></div></div><nav class="pagination-post" id="pagination"><a class="pagination-related" href="/posts/35ca0e58" title="Swagger3"><img class="cover" src= "/yww/img/404.jpg" data-lazy-src="https://img.yww52.com/2020/11/2020-11-3top_img.jpg" onerror="onerror=null;src='/yww/img/404.jpg'" alt="cover of previous post"><div class="info"><div class="info-1"><div class="info-item-1">上一篇</div><div class="info-item-2">Swagger3</div></div><div class="info-2"><div class="info-item-1">前言学完之前的swagger2之后,发现还有一个新的版本，swagger3，用起来更加的简单，而且是官方的starter。 使用 首先导入依赖 12345&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;    &lt;version&gt;3.0.0&lt;/version&gt;&lt;/dependency&gt;  创建swagger配置类。 1234567package com.yww.config;import org.springframework.context.annotation.Configuration;@Configurationpublic class swaggerConfig &#123;&#125;  然后就能访问urlhttp://localhost:8088/swagger-ui/找到文档了。   有很多的配置与swagger2是一样的，就...</div></div></div></a><a class="pagination-related" href="/posts/f5f9fa9b" title="Docker"><img class="cover" src= "/yww/img/404.jpg" data-lazy-src="https://img.yww52.com/2020/10/2020-10-27/top_img.jpg" onerror="onerror=null;src='/yww/img/404.jpg'" alt="cover of next post"><div class="info text-right"><div class="info-1"><div class="info-item-1">下一篇</div><div class="info-item-2">Docker</div></div><div class="info-2"><div class="info-item-1">Docker 是一个开源的应用容器引擎。</div></div></div></a></nav><hr class="custom-hr"/><div id="post-comment"><div class="comment-head"><div class="comment-headline"><i class="fas fa-comments fa-fw"></i><span> 评论</span></div></div><div class="comment-wrap"><div><div id="artalk-wrap"></div></div></div></div></div><div class="aside-content" id="aside-content"><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="fas fa-stream"></i><span>目录</span><span class="toc-percentage"></span></div><div class="toc-content"><ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"><span class="toc-number">1.</span> <span class="toc-text">基本概念</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93"><span class="toc-number">2.</span> <span class="toc-text">连接数据库</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80"><span class="toc-number">3.</span> <span class="toc-text">DDL数据定义语言</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C"><span class="toc-number">3.1.</span> <span class="toc-text">数据库操作</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93"><span class="toc-number">3.1.1.</span> <span class="toc-text">创建数据库</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93"><span class="toc-number">3.1.2.</span> <span class="toc-text">删除数据库</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93"><span class="toc-number">3.2.</span> <span class="toc-text">查看数据库</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E5%BA%93"><span class="toc-number">3.2.1.</span> <span class="toc-text">切换数据库</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E8%A1%A8%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><span class="toc-number">3.3.</span> <span class="toc-text">表中的数据类型</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B"><span class="toc-number">3.3.1.</span> <span class="toc-text">数值类型</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B"><span class="toc-number">3.3.2.</span> <span class="toc-text">字符串类型</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F"><span class="toc-number">3.3.3.</span> <span class="toc-text">时间与日期</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#null"><span class="toc-number">3.3.4.</span> <span class="toc-text">null</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%AD%97%E6%AE%B5%E5%B1%9E%E6%80%A7"><span class="toc-number">3.4.</span> <span class="toc-text">字段属性</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C"><span class="toc-number">3.5.</span> <span class="toc-text">表的操作</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8B%E8%A1%A8"><span class="toc-number">3.5.1.</span> <span class="toc-text">查看表</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9F%A5%E7%9C%8B%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%BF%A1%E6%81%AF"><span class="toc-number">3.5.2.</span> <span class="toc-text">查看表中的信息</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%9B%E5%BB%BA%E8%A1%A8"><span class="toc-number">3.5.3.</span> <span class="toc-text">创建表</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BF%AE%E6%94%B9%E8%A1%A8"><span class="toc-number">3.5.4.</span> <span class="toc-text">修改表</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%A0%E9%99%A4%E8%A1%A8"><span class="toc-number">3.5.5.</span> <span class="toc-text">删除表</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%B7%BB%E5%8A%A0%E5%A4%96%E9%94%AE"><span class="toc-number">3.5.6.</span> <span class="toc-text">添加外键</span></a></li></ol></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#DML%E6%95%B0%E6%8D%AE%E6%93%8D%E7%BA%B5%E8%AF%AD%E8%A8%80"><span class="toc-number">4.</span> <span class="toc-text">DML数据操纵语言</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#INSERT"><span class="toc-number">4.1.</span> <span class="toc-text">INSERT</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#UPDATE"><span class="toc-number">4.2.</span> <span class="toc-text">UPDATE</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#DELETE"><span class="toc-number">4.3.</span> <span class="toc-text">DELETE</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#DQL%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80"><span class="toc-number">5.</span> <span class="toc-text">DQL数据查询语言</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%AE%80%E5%8D%95%E7%9A%84%E6%9F%A5%E8%AF%A2"><span class="toc-number">5.1.</span> <span class="toc-text">简单的查询</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%8E%BB%E9%87%8D"><span class="toc-number">5.2.</span> <span class="toc-text">去重</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E8%BF%9E%E6%8E%A5%E7%AC%A6"><span class="toc-number">5.3.</span> <span class="toc-text">一些常用连接符</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#LIKE"><span class="toc-number">5.4.</span> <span class="toc-text">LIKE</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#WHERE"><span class="toc-number">5.5.</span> <span class="toc-text">WHERE</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#JOIN"><span class="toc-number">5.6.</span> <span class="toc-text">JOIN</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%8E%92%E5%BA%8F"><span class="toc-number">5.7.</span> <span class="toc-text">排序</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%88%86%E9%A1%B5"><span class="toc-number">5.8.</span> <span class="toc-text">分页</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#GROUP-BY"><span class="toc-number">5.9.</span> <span class="toc-text">GROUP BY</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#HAVING"><span class="toc-number">5.10.</span> <span class="toc-text">HAVING</span></a></li></ol></li></ol></div></div></div></div></main><footer id="footer" style="background-image: url(https://img.yww52.com/image/footer.jpg);"><div class="footer-other"><div class="footer-copyright"><span class="copyright">&copy;2019 - 2025 By yww</span><span class="framework-info"><span>框架 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://hexo.io">Hexo 7.3.0</a><span class="footer-separator">|</span><span>主题 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly 5.4.2</a></span></div><div class="footer_custom_text"><a target="_blank" rel="noopener external nofollow noreferrer" href="https://www.upyun.com/?utm_source=lianmeng&amp;utm_medium=referra">又拍云</a><span>提供加速服务</span> </br><a id="yww-beian" target="_blank" rel="noopener external nofollow noreferrer" href="https://beian.miit.gov.cn"><span>桂ICP备20005765号</span></a></div></div></footer></div><div id="rightside"><div id="rightside-config-hide"><button id="readmode" type="button" title="阅读模式"><i class="fas fa-book-open"></i></button><button id="darkmode" type="button" title="日间和夜间模式切换"><i class="fas fa-adjust"></i></button><button id="hide-aside-btn" type="button" title="单栏和双栏切换"><i class="fas fa-arrows-alt-h"></i></button></div><div id="rightside-config-show"><button id="rightside-config" type="button" title="设置"><i class="fas fa-cog fa-spin"></i></button><button class="close" id="mobile-toc-button" type="button" title="目录"><i class="fas fa-list-ul"></i></button><a id="to_comment" href="#post-comment" title="前往评论"><i class="fas fa-comments"></i></a><button id="go-up" type="button" title="回到顶部"><span class="scroll-percent"></span><i class="fas fa-arrow-up"></i></button></div></div><div><script src="/js/utils.js"></script><script src="/js/main.js"></script><script src="https://cdn.jsdelivr.net/npm/instant.page/instantpage.min.js" type="module"></script><script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js"></script><script src="https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.js"></script><div class="js-pjax"><script>(() => {
  let artalkItem = null
  const option = null
  const isShuoshuo = GLOBAL_CONFIG_SITE.pageType === 'shuoshuo'

  const destroyArtalk = () => {
    if (artalkItem) {
      artalkItem.destroy()
      artalkItem = null
    }
  }

  const artalkChangeMode = theme => artalkItem && artalkItem.setDarkMode(theme === 'dark')

  const initArtalk = (el = document, pageKey = location.pathname) => {
    artalkItem = Artalk.init({
      el: el.querySelector('#artalk-wrap'),
      server: 'https://comment.yww52.com',
      site: 'yww的博客',
      darkMode: document.documentElement.getAttribute('data-theme') === 'dark',
      ...option,
      pageKey: isShuoshuo ? pageKey : (option && option.pageKey) || pageKey
    })

    if (GLOBAL_CONFIG.lightbox === 'null') return
    artalkItem.on('list-loaded', () => {
      artalkItem.ctx.get('list').getCommentNodes().forEach(comment => {
        const $content = comment.getRender().$content
        btf.loadLightbox($content.querySelectorAll('img:not([atk-emoticon])'))
      })
    })

    if (isShuoshuo) {
      window.shuoshuoComment.destroyArtalk = () => {
        destroyArtalk()
        if (el.children.length) {
          el.innerHTML = ''
          el.classList.add('no-comment')
        }
      }
    }

    btf.addGlobalFn('pjaxSendOnce', destroyArtalk, 'destroyArtalk')
    btf.addGlobalFn('themeChange', artalkChangeMode, 'artalk')
  }

  const loadArtalk = async (el, pageKey) => {
    if (typeof Artalk === 'object') initArtalk(el, pageKey)
    else {
      await btf.getCSS('/yww/styles/Artalk.css')
      await btf.getScript('/yww/scripts/Artalk.js')
      initArtalk(el, pageKey)
    }
  }

  if (isShuoshuo) {
    'Artalk' === 'Artalk'
      ? window.shuoshuoComment = { loadComment: loadArtalk }
      : window.loadOtherComment = loadArtalk
    return
  }

  if ('Artalk' === 'Artalk' || !true) {
    if (true) btf.loadComment(document.getElementById('artalk-wrap'), loadArtalk)
    else setTimeout(loadArtalk, 100)
  } else {
    window.loadOtherComment = loadArtalk
  }
})()</script></div><script>window.newestComments = {
  changeContent: content => {
    if (content === '') return content

    content = content.replace(/<img.*?src="(.*?)"?[^\>]+>/ig, '[图片]') // replace image link
    content = content.replace(/<a[^>]+?href=["']?([^"']+)["']?[^>]*>([^<]+)<\/a>/gi, '[链接]') // replace url
    content = content.replace(/<pre><code>.*?<\/pre>/gi, '[代码]') // replace code
    content = content.replace(/<code>.*?<\/code>/gi, '[代码]') // replace code
    content = content.replace(/<[^>]+>/g, "") // remove html tag

    if (content.length > 150) {
      content = content.substring(0, 150) + '...'
    }
    return content
  },

  generateHtml: (array, ele) => {
    let result = ''

    if (array.length) {
      for (let i = 0; i < array.length; i++) {
        result += '<div class="aside-list-item">'

        if (true && array[i].avatar) {
          const imgAttr = 'data-lazy-src'
          const lazyloadNative = ''
          result += `<a href="${array[i].url}" class="thumbnail"><img ${imgAttr}="${array[i].avatar}" alt="${array[i].nick}" ${lazyloadNative}></a>`
        }

        result += `<div class="content">
        <a class="comment" href="${array[i].url}" title="${array[i].content}">${array[i].content}</a>
        <div class="name"><span>${array[i].nick} / </span><time datetime="${array[i].date}">${btf.diffDate(array[i].date, true)}</time></div>
        </div></div>`
      }
    } else {
      result += '暂无评论'
    }

    ele.innerHTML = result
    window.lazyLoadInstance && window.lazyLoadInstance.update()
    window.pjax && window.pjax.refresh(ele)
  },

  newestCommentInit: (name, getComment) => {
    const $dom = document.querySelector('#card-newest-comments .aside-list')
    if ($dom) {
      const data = btf.saveToLocal.get(name)
      if (data) {
        newestComments.generateHtml(JSON.parse(data), $dom)
      } else {
        getComment($dom)
      }
    }
  },

  run: (name, getComment) => {
    newestComments.newestCommentInit(name, getComment)
    btf.addGlobalFn('pjaxComplete', () => newestComments.newestCommentInit(name, getComment), name)
  }
}</script><script>window.addEventListener('load', () => {
  const keyName = 'artalk-newest-comments'
  const { changeContent, generateHtml, run } = window.newestComments

  const getAvatarValue = async () => {
    const predefinedAvatarCdn = ''
    const predefinedAvatarDefault = ''

    const avatarDefaultFormat = e => e.startsWith('d=') ? e : `d=${e}`

    if (predefinedAvatarCdn && predefinedAvatarDefault) {
      return { avatarCdn: predefinedAvatarCdn, avatarDefault: avatarDefaultFormat(predefinedAvatarDefault) }
    }

    try {
      const res = await fetch('https://comment.yww52.com/api/v2/conf')
      const result = await res.json()
      const { mirror, params, default: defaults } = result.frontend_conf.gravatar
      const avatarCdn = predefinedAvatarCdn || mirror
      let avatarDefault = avatarDefaultFormat(predefinedAvatarDefault || params || defaults)
      return { avatarCdn, avatarDefault}
    } catch (e) {
      console.error(e)
      return { avatarCdn: predefinedAvatarCdn, avatarDefault: avatarDefaultFormat(predefinedAvatarDefault) }
    }
  }

  const searchParams = new URLSearchParams({
    'site_name': 'yww的博客',
    'limit': '12', // Fetch more comments to filter pending comments
  })

  const getComment = async (ele) => {
    try {
      const res = await fetch(`https://comment.yww52.com/api/v2/stats/latest_comments?${searchParams}`)
      const result = await res.json()
      const { avatarCdn, avatarDefault } = await getAvatarValue()
      const artalk = result.data
        .filter(e => !e.is_pending) // Filter pending comments
        .slice(0, 6) // Limit the number of comments
        .map(e => {
          const avatar = avatarCdn && e.email_encrypted ? `${avatarCdn}${e.email_encrypted}?${avatarDefault}` : ''
          return {
            'avatar': avatar,
            'content': changeContent(e.content_marked),
            'nick': e.nick,
            'url': e.page_url,
            'date': e.date,
          }
        })
      btf.saveToLocal.set(keyName, JSON.stringify(artalk), 10/(60*24))
      generateHtml(artalk, ele)
    } catch (e) {
      console.log(e)
      ele.textContent= "无法获取评论，请确认相关配置是否正确"
    }
  }

  run(keyName, getComment)
})</script><link rel="stylesheet" href="/yww/styles/optimize.css"><link rel="stylesheet" href="/yww/styles/iconfont.css"><script async data-pjax src="/yww/scripts/main.js"></script><script src="https://cdn.jsdelivr.net/npm/pjax/pjax.min.js"></script><script>(() => {
  const pjaxSelectors = ["head > title","#config-diff","#body-wrap","#rightside-config-hide","#rightside-config-show",".js-pjax"]

  window.pjax = new Pjax({
    elements: 'a:not([target="_blank"])',
    selectors: pjaxSelectors,
    cacheBust: false,
    analytics: false,
    scrollRestoration: false
  })

  const triggerPjaxFn = (val) => {
    if (!val) return
    Object.values(val).forEach(fn => fn())
  }

  document.addEventListener('pjax:send', () => {
    // removeEventListener
    btf.removeGlobalFnEvent('pjaxSendOnce')
    btf.removeGlobalFnEvent('themeChange')

    // reset readmode
    const $bodyClassList = document.body.classList
    if ($bodyClassList.contains('read-mode')) $bodyClassList.remove('read-mode')

    triggerPjaxFn(window.globalFn.pjaxSend)
  })

  document.addEventListener('pjax:complete', () => {
    btf.removeGlobalFnEvent('pjaxCompleteOnce')
    document.querySelectorAll('script[data-pjax]').forEach(item => {
      const newScript = document.createElement('script')
      const content = item.text || item.textContent || item.innerHTML || ""
      Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value))
      newScript.appendChild(document.createTextNode(content))
      item.parentNode.replaceChild(newScript, item)
    })

    triggerPjaxFn(window.globalFn.pjaxComplete)
  })

  document.addEventListener('pjax:error', e => {
    if (e.request.status === 404) {
      const usePjax = true
      true
        ? (usePjax ? pjax.loadUrl('/404.html') : window.location.href = '/404.html')
        : window.location.href = e.request.responseURL
    }
  })
})()</script><script async data-pjax src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script><div id="local-search"><div class="search-dialog"><nav class="search-nav"><span class="search-dialog-title">搜索</span><span id="loading-status"></span><button class="search-close-button"><i class="fas fa-times"></i></button></nav><div class="text-center" id="loading-database"><i class="fas fa-spinner fa-pulse"></i><span>  数据加载中</span></div><div class="search-wrap"><div id="local-search-input"><div class="local-search-box"><input class="local-search-box--input" placeholder="搜索文章" type="text"/></div></div><hr/><div id="local-search-results"></div><div id="local-search-stats-wrap"></div></div></div><div id="search-mask"></div><script src="/js/search/local-search.js"></script></div></div><!-- hexo injector body_end start --><script data-pjax src="/yww/scripts/live2d-index.js"></script><script>const oml2d = OML2D.loadOml2d({dockedPosition:"left",mobileDisplay:false,parentElement:document.body,primaryColor:"#d0c3fc",sayHello:true,models:[{"path":"https://img.yww52.com/live2d-models/muluan/86.model3.json","name":"慕鸾","position":[-330,-110],"scale":0.26,"stageStyle":{"width":260,"height":300},"mobilePosition":[-10,23],"mobileScale":0.1,"mobileStageStyle":{"width":180,"height":166},"motionPreloadStrategy":"ALL"},{"path":"https://img.yww52.com/live2d-models/muluan-hunfu/116.model3.json","name":"慕鸾婚服","position":[-315,-110],"scale":0.26,"stageStyle":{"width":260,"height":300},"mobilePosition":[-10,23],"mobileScale":0.1,"mobileStageStyle":{"width":180,"height":166},"motionPreloadStrategy":"ALL"},{"path":"https://img.yww52.com/live2d-models/muluan-angel/qc.model3.json","name":"小天使慕鸾","position":[-100,-30],"scale":0.15,"stageStyle":{"width":260,"height":300},"mobilePosition":[-10,23],"mobileScale":0.1,"mobileStageStyle":{"width":180,"height":166},"motionPreloadStrategy":"ALL"}],menus:{disable:false},tips:{style: {"width":200,"height":110,"left":"calc(50% - 20px)","top":"-130px"},mobileStyle: {"width":180,"height":80,"left":"calc(50% - 30px)","top":"-100px"},idleTips:{interval:15000,message:["你好呀~","欢迎来到我的小站~"]}},statusBar:{"disable":false}});</script><!-- hexo injector body_end end --></body></html>