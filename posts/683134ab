<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover"><title>记一次容器编排 | yww</title><meta name="author" content="yww"><meta name="copyright" content="yww"><meta name="format-detection" content="telephone=no"><meta name="theme-color" content="#ffffff"><meta name="description" content="记一次容器编排。">
<meta property="og:type" content="article">
<meta property="og:title" content="记一次容器编排">
<meta property="og:url" content="https://yww52.com/posts/683134ab">
<meta property="og:site_name" content="yww">
<meta property="og:description" content="记一次容器编排。">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://img.yww52.com/2020/11/2020-11-10top_img.jpg">
<meta property="article:published_time" content="2020-11-09T16:00:00.000Z">
<meta property="article:modified_time" content="2025-07-18T09:57:30.194Z">
<meta property="article:author" content="yww">
<meta property="article:tag" content="yw,yww">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://img.yww52.com/2020/11/2020-11-10top_img.jpg"><link rel="shortcut icon" href="/img/favicon.png"><link rel="canonical" href="https://yww52.com/posts/683134ab"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="stylesheet" href="/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css"><script>
    (() => {
      
    const saveToLocal = {
      set: (key, value, ttl) => {
        if (!ttl) return
        const expiry = Date.now() + ttl * 86400000
        localStorage.setItem(key, JSON.stringify({ value, expiry }))
      },
      get: key => {
        const itemStr = localStorage.getItem(key)
        if (!itemStr) return undefined
        const { value, expiry } = JSON.parse(itemStr)
        if (Date.now() > expiry) {
          localStorage.removeItem(key)
          return undefined
        }
        return value
      }
    }

    window.btf = {
      saveToLocal,
      getScript: (url, attr = {}) => new Promise((resolve, reject) => {
        const script = document.createElement('script')
        script.src = url
        script.async = true
        Object.entries(attr).forEach(([key, val]) => script.setAttribute(key, val))
        script.onload = script.onreadystatechange = () => {
          if (!script.readyState || /loaded|complete/.test(script.readyState)) resolve()
        }
        script.onerror = reject
        document.head.appendChild(script)
      }),
      getCSS: (url, id) => new Promise((resolve, reject) => {
        const link = document.createElement('link')
        link.rel = 'stylesheet'
        link.href = url
        if (id) link.id = id
        link.onload = link.onreadystatechange = () => {
          if (!link.readyState || /loaded|complete/.test(link.readyState)) resolve()
        }
        link.onerror = reject
        document.head.appendChild(link)
      }),
      addGlobalFn: (key, fn, name = false, parent = window) => {
        if (!false && key.startsWith('pjax')) return
        const globalFn = parent.globalFn || {}
        globalFn[key] = globalFn[key] || {}
        globalFn[key][name || Object.keys(globalFn[key]).length] = fn
        parent.globalFn = globalFn
      }
    }
  
      
      const activateDarkMode = () => {
        document.documentElement.setAttribute('data-theme', 'dark')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#0d0d0d')
        }
      }
      const activateLightMode = () => {
        document.documentElement.setAttribute('data-theme', 'light')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#ffffff')
        }
      }

      btf.activateDarkMode = activateDarkMode
      btf.activateLightMode = activateLightMode

      const theme = saveToLocal.get('theme')
    
          theme === 'dark' ? activateDarkMode() : theme === 'light' ? activateLightMode() : null
        
      
      const asideStatus = saveToLocal.get('aside-status')
      if (asideStatus !== undefined) {
        document.documentElement.classList.toggle('hide-aside', asideStatus === 'hide')
      }
    
      
    const detectApple = () => {
      if (/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)) {
        document.documentElement.classList.add('apple')
      }
    }
    detectApple()
  
    })()
  </script><script>const GLOBAL_CONFIG = {
  root: '/',
  algolia: undefined,
  localSearch: undefined,
  translate: undefined,
  highlight: {"plugin":"highlight.js","highlightCopy":true,"highlightLang":true,"highlightHeightLimit":false,"highlightFullpage":false,"highlightMacStyle":false},
  copy: {
    success: '复制成功',
    error: '复制失败',
    noSupport: '浏览器不支持'
  },
  relativeDate: {
    homepage: false,
    post: false
  },
  runtime: '',
  dateSuffix: {
    just: '刚刚',
    min: '分钟前',
    hour: '小时前',
    day: '天前',
    month: '个月前'
  },
  copyright: undefined,
  lightbox: 'null',
  Snackbar: undefined,
  infinitegrid: {
    js: 'https://cdn.jsdelivr.net/npm/@egjs/infinitegrid/dist/infinitegrid.min.js',
    buttonText: '加载更多'
  },
  isPhotoFigcaption: false,
  islazyload: false,
  isAnchor: false,
  percent: {
    toc: true,
    rightside: false,
  },
  autoDarkmode: false
}</script><script id="config-diff">var GLOBAL_CONFIG_SITE = {
  title: '记一次容器编排',
  isPost: true,
  isHome: false,
  isHighlightShrink: false,
  isToc: true,
  isShuoshuo: false
}</script><!-- hexo injector head_end start --><link rel="stylesheet" href="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css" media="defer" onload="this.media='all'"><link rel="stylesheet" href="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css" media="defer" onload="this.media='all'"><script src="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js"></script><!-- hexo injector head_end end --><meta name="generator" content="Hexo 7.3.0"></head><body><div class="post" id="body-wrap"><header class="post-bg" id="page-header" style="background-image: url(https://img.yww52.com/2020/11/2020-11-10top_img.jpg);"><nav id="nav"><span id="blog-info"><a class="nav-site-title" href="/"><span class="site-name">yww</span></a><a class="nav-page-title" href="/"><span class="site-name">记一次容器编排</span></a></span><div id="menus"></div></nav><div id="post-info"><h1 class="post-title">记一次容器编排</h1><div id="post-meta"><div class="meta-firstline"><span class="post-meta-date"><i class="far fa-calendar-alt fa-fw post-meta-icon"></i><span class="post-meta-label">发表于</span><time class="post-meta-date-created" datetime="2020-11-09T16:00:00.000Z" title="发表于 2020-11-10 00:00:00">2020-11-10</time><span class="post-meta-separator">|</span><i class="fas fa-history fa-fw post-meta-icon"></i><span class="post-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2025-07-18T09:57:30.194Z" title="更新于 2025-07-18 17:57:30">2025-07-18</time></span><span class="post-meta-categories"><span class="post-meta-separator">|</span><i class="fas fa-inbox fa-fw post-meta-icon"></i><a class="post-meta-categories" href="/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/">虚拟化</a></span></div><div class="meta-secondline"><span class="post-meta-separator">|</span><span class="post-meta-pv-cv" id="" data-flag-title=""><i class="far fa-eye fa-fw post-meta-icon"></i><span class="post-meta-label">浏览量:</span><span id="busuanzi_value_page_pv"><i class="fa-solid fa-spinner fa-spin"></i></span></span></div></div></div></header><main class="layout" id="content-inner"><div id="post"><article class="container post-content" id="article-container"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>老师丢了一个spring写的项目给我们部署到服务器上。这次来记录一下部署的过程。</p>
<h1 id="分析项目"><a href="#分析项目" class="headerlink" title="分析项目"></a>分析项目</h1><p>这是一个spring的项目，没用到springboot，只能用tomcat部署了。因为还用到了MySQL连接，所以还需要一个MySQL的容器。知道了需要的容器那就开始行动了。</p>
<h1 id="构建好大概框架"><a href="#构建好大概框架" class="headerlink" title="构建好大概框架"></a>构建好大概框架</h1><ol>
<li><p>创建一个项目的文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir math</span><br><span class="line">cd math</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个放Tomcat配置的文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir webapp</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个放MySQL配置的文件夹</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir database</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个<code>docker-compose.yml</code>的配置文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch docker-compose.yml</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="Tomcat容器"><a href="#Tomcat容器" class="headerlink" title="Tomcat容器"></a>Tomcat容器</h1><p>因为这个项目打包出来是war包的，所以我想的就是直接将war包放到Tomcat的webapps里然后运行Tomcat就好了。（以下操作是在webapp文件夹进行）</p>
<div class="tip warning"><p>注意设置项目中连接mysql的url，ip填写为mysql（其他也行，后面自己改服务名）<br>localhost是指Tomcat容器的IP，因为容器与容器是隔离的，所以会连接不到MySQL容器的IP。</p>
</div>
<ol>
<li><p>将改好的项目war包移入服务器的这个文件夹中。</p>
</li>
<li><p>定制Tomcat的镜像，创建一个<code>Dockerfile</code>文件。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> tomcat:<span class="number">9.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer = <span class="string">&quot;yww  &lt;1141950370@qq.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">9010</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将war包放入Tomcat容器的webapps文件夹中</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> math.war /usr/local/tomcat/webapps/</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="MySQL容器"><a href="#MySQL容器" class="headerlink" title="MySQL容器"></a>MySQL容器</h1><p>这个容器才是这次的重点，因为要导入自己的sql语句，所以需要额外的shell脚本来实现。（以下操作是在database文件夹进行）</p>
<ol>
<li><p>将sql文件移入这个文件夹，我的文件名是<code>mathStock.sql</code>。</p>
</li>
<li><p>定制MySQL的镜像，创建一个<code>Dockerfile</code>文件。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> mysql:<span class="number">8.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer = <span class="string">&quot;yww  &lt;1141950370@qq.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql的工作位置</span></span><br><span class="line"><span class="keyword">ENV</span> WORK_PATH /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义会被容器自动执行的目录和所需文件的环境变量</span></span><br><span class="line"><span class="keyword">ENV</span> AUTO_RUN_DIR /docker-<span class="keyword">entrypoint</span><span class="language-bash">-initdb.d</span></span><br><span class="line"><span class="keyword">ENV</span> SQLFILE mathStock.sql</span><br><span class="line"><span class="keyword">ENV</span> INSTALL_DATA_SHELL setup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将需要的文件放入容器内</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./<span class="variable">$SQLFILE</span> <span class="variable">$WORK_PATH</span>/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./<span class="variable">$INSTALL_DATA_SHELL</span> <span class="variable">$AUTO_RUN_DIR</span>/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给shell脚本和自动执行目录增加可执行的权限</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> a+x <span class="variable">$AUTO_RUN_DIR</span>/<span class="variable">$INSTALL_DATA_SHELL</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置容器启动时执行的命令</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;/docker-entrypoint-initdb.d/import.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个shell脚本用于导入sql文件，我的文件名是<code>setup.sh</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">mysql -uroot -ppassword &lt;&lt;EOF</span><br><span class="line">source /usr/local/mathStock.sql;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="容器编排docker-compose-yml"><a href="#容器编排docker-compose-yml" class="headerlink" title="容器编排docker-compose.yml"></a>容器编排docker-compose.yml</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 版本需要选对，不然报错</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">	<span class="comment"># 编排Tomcat容器</span></span><br><span class="line">      <span class="attr">webapp:</span></span><br><span class="line">           <span class="attr">container_name:</span> <span class="string">webapp</span></span><br><span class="line">           <span class="attr">image:</span> <span class="string">webapp</span></span><br><span class="line">           <span class="attr">build:</span></span><br><span class="line">               <span class="attr">context:</span> <span class="string">./webapp</span></span><br><span class="line">               <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">           <span class="attr">ports:</span></span><br><span class="line">                   <span class="bullet">-</span> <span class="string">&quot;9010:8080&quot;</span></span><br><span class="line">           <span class="attr">depends_on:</span></span><br><span class="line">                   <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">	<span class="comment"># 编排MySQL容器</span></span><br><span class="line">      <span class="attr">mysql:</span></span><br><span class="line">           <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">           <span class="attr">image:</span> <span class="string">database</span></span><br><span class="line">           <span class="attr">build:</span></span><br><span class="line">                <span class="attr">context:</span> <span class="string">./database</span> </span><br><span class="line">                <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">           <span class="attr">ports:</span></span><br><span class="line">                   <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span> </span><br><span class="line">           <span class="comment"># 挂载数据卷</span></span><br><span class="line">           <span class="attr">volumes:</span></span><br><span class="line">                   <span class="bullet">-</span> <span class="string">&quot;./mysql:/var/lib/mysql&quot;</span></span><br><span class="line">                   <span class="bullet">-</span> <span class="string">&quot;./my.cnf:/etc/mysql/conf.d/my.cnf&quot;</span></span><br><span class="line">           <span class="comment">#设置编码格式</span></span><br><span class="line">           <span class="attr">command:</span> [</span><br><span class="line">                  <span class="string">&#x27;--character-set-server=utf8mb4&#x27;</span>, </span><br><span class="line">                  <span class="string">&#x27;--collation-server=utf8mb4_unicode_ci&#x27;</span>   </span><br><span class="line">           ]</span><br><span class="line">           <span class="comment">#设置初始化密码</span></span><br><span class="line">           <span class="attr">environment:</span></span><br><span class="line">                <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>编排完之后就可以运行了。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul>
<li><a target="_blank" rel="noopener external nofollow noreferrer" href="https://blog.csdn.net/u011913691/article/details/90665639">https://blog.csdn.net/u011913691/article/details/90665639</a></li>
</ul>
</article><div class="post-copyright"><div class="post-copyright__author"><span class="post-copyright-meta"><i class="fas fa-circle-user fa-fw"></i>文章作者: </span><span class="post-copyright-info"><a href="https://yww52.com">yww</a></span></div><div class="post-copyright__type"><span class="post-copyright-meta"><i class="fas fa-square-arrow-up-right fa-fw"></i>文章链接: </span><span class="post-copyright-info"><a href="https://yww52.com/posts/683134ab">https://yww52.com/posts/683134ab</a></span></div><div class="post-copyright__notice"><span class="post-copyright-meta"><i class="fas fa-circle-exclamation fa-fw"></i>版权声明: </span><span class="post-copyright-info">本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow noreferrer" target="_blank">CC BY-NC-SA 4.0</a> 许可协议。转载请注明来源 <a href="https://yww52.com" target="_blank">yww</a>！</span></div></div><div class="tag_share"><div class="post-share"><div class="social-share" data-image="https://img.yww52.com/2020/11/2020-11-10top_img.jpg" data-sites="facebook,twitter,wechat,weibo,qq"></div><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/css/share.min.css" media="print" onload="this.media='all'"><script src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/sharejs/dist/js/social-share.min.js" defer></script></div></div><nav class="pagination-post" id="pagination"><a class="pagination-related" href="/posts/53d0684b" title="Linux"><img class="cover" src="https://img.yww52.com/2020/11/2020-11-11/top_img.jpg" onerror="onerror=null;src='/img/404.jpg'" alt="cover of previous post"><div class="info"><div class="info-1"><div class="info-item-1">上一篇</div><div class="info-item-2">Linux</div></div><div class="info-2"><div class="info-item-1">虚拟机网络    连接方式 连接的网卡 能否连接局域网 能否连接公网     桥接 VMnet0(本地真实网卡) 可以 可以   NAT VMnet8 不可以 可以   仅主机 VMnet1 不可以 不可以      桥接连接的网卡是随机连接的，要是连接到了没网络的网卡还需要自己设置。 桥接模式下虚拟机相当一台独立的计算机，拥有一个独立的IP地址，与本机在一个局域网内。 NAT模式可以帮助虚拟机通过本机所在的网络来访问公网。 仅主机模式会建立一个全封闭的虚拟网络，只有主机能访问  目录结构 常用命令目录命令ls12345678# 查看文件夹的信息	ls # 查看详细信息	ls -l# 查看隐藏目录	ls -a # 显示文件大小	ls -lh cd12345678# 进入目录	cd [路径]# 进入家目录	cd ~# 进入上一次所在的目录	cd -# 进入上一级目录	cd .. mkdir和rmdir12345678# 创建目录	mkdir [目录名]# 删除目录，只能删除空目录	rmdir [目录名]# 递归建立目录	mkdir -p [目录路径]#...</div></div></div></a><a class="pagination-related" href="/posts/35ca0e58" title="Swagger3"><img class="cover" src="https://img.yww52.com/2020/11/2020-11-3top_img.jpg" onerror="onerror=null;src='/img/404.jpg'" alt="cover of next post"><div class="info text-right"><div class="info-1"><div class="info-item-1">下一篇</div><div class="info-item-2">Swagger3</div></div><div class="info-2"><div class="info-item-1">前言学完之前的swagger2之后,发现还有一个新的版本，swagger3，用起来更加的简单，而且是官方的starter。 使用 首先导入依赖 12345&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;    &lt;version&gt;3.0.0&lt;/version&gt;&lt;/dependency&gt;  创建swagger配置类。 1234567package com.yww.config;import org.springframework.context.annotation.Configuration;@Configurationpublic class swaggerConfig...</div></div></div></a></nav></div><div class="aside-content" id="aside-content"><div class="card-widget card-info text-center"><div class="avatar-img"><img src="/img/butterfly-icon.png" onerror="this.onerror=null;this.src='/img/friend_404.gif'" alt="avatar"/></div><div class="author-info-name">yww</div><div class="author-info-description">debug myself</div><div class="site-data"><a href="/archives/"><div class="headline">文章</div><div class="length-num">72</div></a><a href="/tags/"><div class="headline">标签</div><div class="length-num">0</div></a><a href="/categories/"><div class="headline">分类</div><div class="length-num">16</div></a></div><a id="card-info-btn" target="_blank" rel="noopener external nofollow noreferrer" href="https://github.com/xxxxxx"><i class="fab fa-github"></i><span>Follow Me</span></a></div><div class="card-widget card-announcement"><div class="item-headline"><i class="fas fa-bullhorn fa-shake"></i><span>公告</span></div><div class="announcement_content">This is my Blog</div></div><div class="sticky_layout"><div class="card-widget" id="card-toc"><div class="item-headline"><i class="fas fa-stream"></i><span>目录</span><span class="toc-percentage"></span></div><div class="toc-content"><ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%89%8D%E8%A8%80"><span class="toc-number">1.</span> <span class="toc-text">前言</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%88%86%E6%9E%90%E9%A1%B9%E7%9B%AE"><span class="toc-number">2.</span> <span class="toc-text">分析项目</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E6%9E%84%E5%BB%BA%E5%A5%BD%E5%A4%A7%E6%A6%82%E6%A1%86%E6%9E%B6"><span class="toc-number">3.</span> <span class="toc-text">构建好大概框架</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Tomcat%E5%AE%B9%E5%99%A8"><span class="toc-number">4.</span> <span class="toc-text">Tomcat容器</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#MySQL%E5%AE%B9%E5%99%A8"><span class="toc-number">5.</span> <span class="toc-text">MySQL容器</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92docker-compose-yml"><span class="toc-number">6.</span> <span class="toc-text">容器编排docker-compose.yml</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E8%BF%90%E8%A1%8C"><span class="toc-number">7.</span> <span class="toc-text">运行</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"><span class="toc-number">8.</span> <span class="toc-text">参考文章</span></a></li></ol></div></div><div class="card-widget card-recent-post"><div class="item-headline"><i class="fas fa-history"></i><span>最新文章</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/posts/91f4854c" title="Java图片处理"><img src="https://img.yww52.com/2023/4/2023-4-18top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="Java图片处理"/></a><div class="content"><a class="title" href="/posts/91f4854c" title="Java图片处理">Java图片处理</a><time datetime="2023-04-17T16:00:00.000Z" title="发表于 2023-04-18 00:00:00">2023-04-18</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/58d09dd7" title="开发环境配置"><img src="https://img.yww52.com/2023/4/2023-4-11top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="开发环境配置"/></a><div class="content"><a class="title" href="/posts/58d09dd7" title="开发环境配置">开发环境配置</a><time datetime="2023-04-10T16:00:00.000Z" title="发表于 2023-04-11 00:00:00">2023-04-11</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/4e5ad84e" title="MybatisPlus常用方法"><img src="https://img.yww52.com/2023/2/2023-2-2top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="MybatisPlus常用方法"/></a><div class="content"><a class="title" href="/posts/4e5ad84e" title="MybatisPlus常用方法">MybatisPlus常用方法</a><time datetime="2023-02-01T16:00:00.000Z" title="发表于 2023-02-02 00:00:00">2023-02-02</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/622a5765" title="2022年度总结"><img src="https://img.yww52.com/2023/1/2023-1-1/top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="2022年度总结"/></a><div class="content"><a class="title" href="/posts/622a5765" title="2022年度总结">2022年度总结</a><time datetime="2022-12-31T16:00:00.000Z" title="发表于 2023-01-01 00:00:00">2023-01-01</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/posts/e31003e0" title="SpringBoot部署启动"><img src="https://img.yww52.com/2022/09/2022-9-28top_img.jpg" onerror="this.onerror=null;this.src='/img/404.jpg'" alt="SpringBoot部署启动"/></a><div class="content"><a class="title" href="/posts/e31003e0" title="SpringBoot部署启动">SpringBoot部署启动</a><time datetime="2022-09-27T16:00:00.000Z" title="发表于 2022-09-28 00:00:00">2022-09-28</time></div></div></div></div></div></div></main><footer id="footer"><div id="footer-wrap"><div class="copyright">&copy;2019 - 2025 By yww</div><div class="framework-info"><span>框架 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://hexo.io">Hexo</a><span class="footer-separator">|</span><span>主题 </span><a target="_blank" rel="noopener external nofollow noreferrer" href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></div></div></footer></div><div id="rightside"><div id="rightside-config-hide"><button id="readmode" type="button" title="阅读模式"><i class="fas fa-book-open"></i></button><button id="darkmode" type="button" title="日间和夜间模式切换"><i class="fas fa-adjust"></i></button><button id="hide-aside-btn" type="button" title="单栏和双栏切换"><i class="fas fa-arrows-alt-h"></i></button></div><div id="rightside-config-show"><button id="rightside-config" type="button" title="设置"><i class="fas fa-cog fa-spin"></i></button><button class="close" id="mobile-toc-button" type="button" title="目录"><i class="fas fa-list-ul"></i></button><button id="go-up" type="button" title="回到顶部"><span class="scroll-percent"></span><i class="fas fa-arrow-up"></i></button></div></div><div><script src="/js/utils.js"></script><script src="/js/main.js"></script><div class="js-pjax"></div><script async data-pjax src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script></div><!-- hexo injector body_end start --><script async src="//at.alicdn.com/t/font_2032782_8d5kxvn09md.js"></script><script data-pjax src="/live2d-models/index.min.js"></script><script>const oml2d = OML2D.loadOml2d({dockedPosition:"left",mobileDisplay:false,parentElement:document.body,primaryColor:"#d0c3fc",sayHello:true,models:[{"path":["/live2d-models/慕鸾/86.model3.json","/live2d-models/慕鸾婚服/116.model3.json","/live2d-models/小天使/qc.model3.json"],"name":"慕鸾","position":[-70,0],"scale":0.09,"stageStyle":{"width":250,"height":250},"mobilePosition":[-10,23],"mobileScale":0.1,"mobileStageStyle":{"width":180,"height":166},"motionPreloadStrategy":"ALL"}],menus:{disable:false},tips:{style: {"width":200,"height":110,"left":"calc(50% - 20px)","top":"-100px"},mobileStyle: {"width":180,"height":80,"left":"calc(50% - 30px)","top":"-100px"},idleTips:{interval:15000,message:["你好呀~","欢迎来到我的小站~"]}},statusBar:{"disable":false}});</script><!-- hexo injector body_end end --></body></html>